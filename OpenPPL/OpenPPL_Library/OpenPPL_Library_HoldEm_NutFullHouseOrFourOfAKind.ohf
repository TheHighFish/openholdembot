##OpenPPL_License_Text##
//*****************************************************************************
//
// OpenPPL Library
//   Supporting functions for OpenPPL.
//   These functions will be loaded by OpenHoldem in the background
//   and will be available both for OpenPPL and OH-script users.
//   This library is mostly written in OH-script,
//   but it can be extended by OpenPPL-functions, as both formats are 100% compatible.
//
// OpenPPL is part of the OpenHoldem project
//   Source code:           https://github.com/OpenHoldem/openholdembot/
//   Source code:           https://github.com/OpenHoldem/openholdembot/releases
//   Forums:                http://www.maxinmontreal.com/forums/index.php
//   Licensed under GPL v3: http://www.gnu.org/licenses/gpl.html
//
// The original PPL (Poker Programming Language) got invented by
//   Shanky Bonusbots:      http://bonusbots.com/support/index.php
//
// Required OpenHoldem version: 11.2.0 or later
//
// Contributors:
//   Bob3456
//   ChuckNeverMuck
//   CoolBotMe123
//   CrumbleSunday
//   Dr.Kaktuz
//   Efu
//   Fn101
//   Fqfq	
//   Gecko
//   JConner
//   Johnny
//   JokeDoke
//   KaeKruse
//   Kyo
//   Lavezzi
//   MerzkiyTipon
//   Morello
//   MrRuder
//   Narfal
//   Nik0
//   NPNG
//   Poker_Dog
//   Postenjak
//   Rambam
//   Relhby
//   Salem
//   Satanikut
//   Stangelnator
//   SteveG1963
//   Strikles
//   SuperBlak
//   TheHighFish
//   ThemAndMe
//   Want2Learn
//   Zolp
//
//*****************************************************************************

//*****************************************************************************
//
// OpenPPL - NutFullHouseOrFourOfAKind
//
//*****************************************************************************

##HoldEm_NutFullHouseOrFourOfAKind##
[(pokerval & (fullhouse | fourofakind)) == 0] ? HINT_We_Dont_Have_A_FullHouse_At_All : 
// symbol gets now calculated internally by OpenHoldem
nutfullhouseorfourofakind

##RelativeNutFullHouseOrFourOfAKind##
HoldEm_RelativeNutFullHouseOrFourOfAKind

##HoldEm_RelativeNutFullHouseOrFourOfAKind##
WHEN NOT (HaveFullHouse OR HaveQuads) RETURN 0 FORCE
WHEN Others RETURN (1 - (nutfullhouseorfourofakind / (nutfullhouseorfourofakind_ntotal + 1))) FORCE

##NutFullHouseOrFourOfAKind_ShankyCompatible##
// Returning 0 instead of a large number (999)
// when we don't have a full house at all
WHEN (NutFullHouseOrFourOfAKind >= HINT_We_Dont_Have_A_FullHouse_At_All) RETURN 0 FORCE
WHEN Others RETURN NutFullHouseOrFourOfAKind FORCE

