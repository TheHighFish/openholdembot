#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass amsbook
\use_default_options true
\begin_modules
theorems-ams
eqs-within-sections
figs-within-sections
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 0
\use_package esint 1
\use_package mathdots 0
\use_package mathtools 0
\use_package mhchem 1
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth -2
\tocdepth -2
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter*
User-Defined Variables
\end_layout

\begin_layout Standard
Most probably you need some game-history to take your decision; then you
 will find symbols like NoBettingOnFlop and OpenHoldem's history symbols
 and they will be useful for a good portion os use-cases, but identifying
 very special situations afterwards only with the built-in symbols might
 be hard or even impossible.
 So wouldn't it be helpful if you could remember what happened in the game?
 Of course you can - with user-defined variables.
 Let's take a small example.
\end_layout

\begin_layout Standard

\emph on
User-defined variables need to be prefixed with the word “user”, and the
 word Set when you give them a value.
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

WHEN FirstCallerPosition = 9 Set user_UTG_Was_Limping
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
As you see, there's the 
\series bold
Set
\series default
 command and after it there is a user-defined variable instead of an action
 after a condition, but no keyword force.
\end_layout

\begin_layout Itemize
Whenever OpenPPL / OpenHoldem sees such a construct it evaluates the when-condit
ion.
 If the condition is true, OpenHoldem sets the user-variable to true and
 continues with the evaluation, until it finds a true condition with an
 action.
\end_layout

\begin_layout Itemize
All user-defined variables start with false (0).
 Once you set them they become true (or 1, which is technically the same).
 
\end_layout

\begin_layout Itemize
User-defined variables keep their value for the current hand and can't be
 reset back by the user.
 But when the hand is over they get reset automatically.
\end_layout

\begin_layout Itemize
Naming: every user-defined variable starts with the prefix 
\begin_inset Quotes eld
\end_inset

user
\begin_inset Quotes erd
\end_inset

, followed by a sequence of characters [a-zA-Z], digits [0-9] and underscores
 [_].
\end_layout

\begin_layout Itemize
Querying the value of a variable is simple: you can use it just like any
 other symbol as part of an expression:
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

##f$preflop##
\end_layout

\begin_layout Plain Layout

    WHEN Hand$AA RaiseMax FORCE 
\end_layout

\begin_layout Plain Layout

    WHEN Hand$KK Set userDoesNotKnowWhatToDo 
\end_layout

\begin_layout Plain Layout

    WHEN Hand$QQ Set userStartsToCry 
\end_layout

\begin_layout Plain Layout

    WHEN userDoesNotKnowWhatToDo Call FORCE 
\end_layout

\begin_layout Plain Layout

    WHEN userStartsToCry SitOut FORCE 
\end_layout

\begin_layout Plain Layout

    WHEN Others Fold FORCE
\end_layout

\end_inset


\end_layout

\begin_layout Section*
Expert Tricks (Memory Symbols)
\end_layout

\begin_layout Standard
Do you need variables that can be set to any arbitrary value? Do you need
 variables that can be reset back? Do you need variables that don't reset
 automatically, but keep their values till the next hand or even for the
 complete session? There is a solution for it (of course).
 Instead of PPL-like user-variables it is also possible to use OpenHoldem's
 memory-store-command (following example store the decimal number 3,14..):
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

WHEN (...) Set me_st_MySecretVariable_3_141592653
\end_layout

\end_inset

 and then use it later with OpenHoldem's memory-recall-command:
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

WHEN (...
 me_re_MySecretVariable ...) ...
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This construct is a little bit more mighty, but also contains some possible
 pitfalls and requires extra care by the user.
\end_layout

\begin_layout Itemize
OpenHoldem's user-defined variables are case sensitive.
 me_st_x_1 is something different than me_st_X_1.
\end_layout

\begin_layout Itemize
No underscores allowed in the name of the variable.
 Underscores are used to separate name and value.
 (If you wonder, why underscores are allowed in simple user-variables: because
 the translator removes them).
\end_layout

\begin_layout Itemize
No automatic reset.
 If you need such a reset, you could do it e.g.
 before your first action preflop:
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

##f$preflop##
\end_layout

\begin_layout Plain Layout

WHEN (BotsActionsOnThisRound = 0)
\end_layout

\begin_layout Plain Layout

    WHEN Others Set me_st_MySecretVariable_0
\end_layout

\begin_layout Plain Layout

    ...
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Table occlusion reset the memory variables.
\end_layout

\begin_layout Standard

\emph on
May the force be with you!
\end_layout

\end_body
\end_document
