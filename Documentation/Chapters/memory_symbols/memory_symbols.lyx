#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass amsbook
\use_default_options true
\begin_modules
theorems-ams
eqs-within-sections
figs-within-sections
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 0
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 0
\use_package mhchem 1
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth -2
\tocdepth -2
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
\begin_inset Index idx
status open

\begin_layout Plain Layout
Memory symbols
\end_layout

\end_inset

Memory Symbols 
\end_layout

\begin_layout Section
Introduction 
\end_layout

\begin_layout Standard
One of the most powerful features of OpenHoldem is its ability to remember.
 Very few other bots have this ability.
 
\end_layout

\begin_layout Section*
Planning 
\end_layout

\begin_layout Standard
Working with memory symbols requires a bit of planning and specifically
 one should keep the following in mind: OpenHoldem does not know your memory
 symbol before you create it.
 This sounds simple but one should not forget it because it could create
 problems with your first hand (The symbol would be undefined and return
 0).
 Once a memory symbol is created, and a value is stored, OpenHoldem will
 remember that value until it is altered or replaced by another or until
 OpenHoldem is closed.
 This is great if you want OpenHoldem to remember what happened 10 hands
 ago but could bite you if you forget to reset them.
 It is of utmost importance to decide when and what should be remembered.
 
\end_layout

\begin_layout Section
Formulation 
\end_layout

\begin_layout Standard
OpenHoldem provides memory_symbols to store values in variables in your
 formulas as a replacement for left-hand-side-expressions.
 Storing a value looks like me_st_SYMBOLNAME_VALUE.
 For example you can store:
\end_layout

\begin_layout Description
numbers, e.g.
 me_st_Pi_3_141
\end_layout

\begin_layout Description
symbols, e.g.
 me_st_MyChair_userchair 
\end_layout

\begin_layout Description
functions, e.g.
 me_st_CallFunction_f$call 
\end_layout

\begin_layout Description
memory symbols, e.g.
 me_st_OldValue_me_re_CurrentValue
\end_layout

\begin_layout Standard
me_st_ will store a new value, where_as me_re_ will lookup a previously
 stored value and me_inc_ will increment a value that serves as a counter.
 OpenHoldem memory-symbols will never reset as long as you don't explicitly
 do so.
 Don't confuse this behaviour with OpenPPL that resets all user-variables
 at the beginning of a new hand.
 A technical note: the desired result of a me_st_command is its side-effect;
 the symbol itself will be evaluated as 0.
\end_layout

\begin_layout Section
Ini-functions
\end_layout

\begin_layout Standard
All memory-symbols have to be cleared or initialized at some time.
 To do this in a clean and fail-safe way OpenHoldem provides six initialization-
functions since version 4.2.0.
 They get called at various times of execution, but always after the basic
 symbols have been calculated and before the autoplayer-functions get evaluated.
 Due to our verbosity-fetish they should be pretty self-explaning:
\end_layout

\begin_layout Itemize
f$ini_function_on_startup
\end_layout

\begin_layout Itemize
f$ini_function_on_connection
\end_layout

\begin_layout Itemize
f$ini_function_on_handreset
\end_layout

\begin_layout Itemize
f$ini_function_on_new_round
\end_layout

\begin_layout Itemize
f$ini_function_on_my_turn
\end_layout

\begin_layout Itemize
f$ini_function_on_heartbeat
\end_layout

\begin_layout Standard
Simple example:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

##f$ini_function_on_my_turn##
\end_layout

\begin_layout Plain Layout

f$MonsterHand ? me_st_GoodSlowPlaySituation_1 : 0
\end_layout

\end_inset


\end_layout

\begin_layout Section
Putting it together
\end_layout

\begin_layout Standard
To make things clear we will be putting two memory symbols into your bot.
 A) We will create a “Stack to Pot Ratio” memory symbol (the function of
 this symbol is to store the ratio of our balance to the pot at the start
 of the betting on the flop to be retrieve later in order to make commitment
 decisions), and B) We will create a “Slow Play” memory symbol, (the function
 of this symbol is to store our decision during a betting round that we
 will check-raise the next betting round regardless of what the next card
 is)
\end_layout

\begin_layout Subsection
STEP 1: Create the symbols:
\end_layout

\begin_layout Standard
In f$ini_function_on_handreset we put:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

  me_st_stpr_0 
\end_layout

\begin_layout Plain Layout

+ me_st_slowplay_0
\end_layout

\end_inset


\end_layout

\begin_layout Standard
to reset these two values on handreset to zero (which means false in the
 second case).
\end_layout

\begin_layout Subsection
STEP 2 (a): 
\end_layout

\begin_layout Standard
In f$ini_function_on_my_turn we put 
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

betround == 2 ?
\end_layout

\begin_layout Plain Layout

(me_st_stpr_f$stpr + me_st_slowplay_f$slowplay) : 0
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Id it is on the flop then we will store the values of the functions f$stpr
 and f$slowplay at that moment.
 
\end_layout

\begin_layout Subsection
STEP 2(b) 
\end_layout

\begin_layout Standard
We create the functions whose value we want to store: 
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

##f$stpr## 
\end_layout

\begin_layout Plain Layout

balance/potcommon 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Comment: we don’t use “pot” because that would include any bets during round2
 before us.
 
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

##f$slowplay##
\end_layout

\begin_layout Plain Layout

betround==2 && nhandshi==0 ? 1 : 0 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Comment: this formula will return 1 when we have the nuts and this will
 be stored into the “slowplay” memory symbol 
\end_layout

\begin_layout Subsection
STEP 3 Retrieve and use the memory.
 
\end_layout

\begin_layout Standard
In f$alli we put 
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

betround==3 && me_re_slowplay && me_re_stpr<10 ? 1 : 0 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
English translation: It is the turn and we, on the flop, decided to slow
 play and the ratio between the pot (at the start of betround==2) and our
 balance at that time was 1:10 and therefore we will shove.
 
\end_layout

\begin_layout Section
Conclusion 
\end_layout

\begin_layout Standard
The memory symbols are very powerful but need a bit of planning.
 It is important to decide when to define, store and retrieve the values
 in these symbols.
 
\end_layout

\end_body
\end_document
