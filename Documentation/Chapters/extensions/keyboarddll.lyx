#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 0
\use_package esint 1
\use_package mathdots 0
\use_package mathtools 0
\use_package mhchem 1
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth -2
\tocdepth -2
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
\begin_inset Index idx
status open

\begin_layout Plain Layout
Keyboard DLL
\end_layout

\end_inset

Keyboard 
\begin_inset Index idx
status open

\begin_layout Plain Layout
DLL
\end_layout

\end_inset

DLL
\begin_inset CommandInset label
LatexCommand label
name "sec:Keyboard-DLL"

\end_inset


\end_layout

\begin_layout Standard
The keyboard DLL extension provides for a user-specified handling of keyboard
 actions.
 The standard, reference keybaord.dll that is shipped with OpenHoldem performs
 very un-human-like keyboard actions.
 For example, there is no delay between keystrokes.
 When entering a betsize, a human is likely to have somewhat random delays
 between keypresses as the betsize amount is entered into the betsize box.
 Simulating keyboard actions that are more human-like may help to avoid
 detection by casions.
 
\end_layout

\begin_layout Standard
The keyboard DLL extension is available if you would like to implement custom
 keyboard action behavior.
 The source code for the reference keyboard.dll implementation can be found
 on Google Code in the source code repository.
\end_layout

\begin_layout Standard
Two methods must be exposed in your keyboard.dll in order to interface properly
 with OpenHoldem.
 
\end_layout

\begin_layout Standard
“SendString” is called when OpenHoldem wants to send a string to the poker
 client.
 Generally, this method is expected to click in the specified rectangle
 first, to activate it.
 The prototype for the “SendString” method is:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

KEYBOARDDLL_API int SendString(const HWND hwnd, const RECT rect, const CString
 s, const bool use_comma, const HWND restore_focus, const POINT restore_cursor);
\end_layout

\end_inset


\end_layout

\begin_layout Standard
“SendKey” is called when OpenHoldem wants to send a single key to the poker
 client.
 Generally, this method is expected to click in the specified rectangle
 first, to activate it.
 The prototype for the “SendKey” method is:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

KEYBOARDDLL_API int SendKey(const HWND hwnd, const RECT rect, UINT vkey,
 const HWND restore_focus, const POINT restore_cursor);
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="8" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top" width="20text%">
<column alignment="left" valignment="top" width="80text%">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Parameter
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
hwnd (in)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
 the HWND of the window to take the mouse action on
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
rect (in)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
the bounding rectangle of the area to click in to activate – this generally
 corresponds to a Table Map Region record rectangle, like the chat box or
 the betsize field; this rectangle is in relative client context; if the
 members of the RECT struct are {-1,-1,-1,-1} then do not click in the rectangle
 first 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
s (in)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
the string to be sent to the poker client 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
use_comma (in)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
if true, then use a “comma” instead of a “dot” as the decimal separator
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
vkey (in)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
the VKEY code of the key to send to the poker client
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
restore_focus (in)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
the HWND of the window to return focus, active and foreground to, after
 the action has been taken; if this is NULL, no focus resotre is requested
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
restore_cursor (in)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
a POINT to return the cursor to, after the action has been taken; if POINT.x
 and POINT.y are set to -1, then no cursor return is requested
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_body
\end_document
