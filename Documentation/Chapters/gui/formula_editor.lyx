#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass amsbook
\use_default_options true
\begin_modules
theorems-ams
eqs-within-sections
figs-within-sections
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 0
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth -2
\tocdepth -2
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
The 
\begin_inset Index idx
status open

\begin_layout Plain Layout
Formula editor
\end_layout

\end_inset

Formula Editor
\end_layout

\begin_layout Standard
!!! Formula-description not here!!!, but in introduction!!!
\end_layout

\begin_layout Standard
Figure 5.6-37 OpenHoldem Formula Editor
\end_layout

\begin_layout Standard
The large control on the right side of the window displays the code for
 whatever function you have currently selected in the tree on the left.
 Primary FunctionsFunction Description 
\end_layout

\begin_layout Subsection
f$allin
\end_layout

\begin_layout Standard
This function instructs the Autoplayer to move all-in, either with the slider,
 or by entering the bet into the SWAG box, depending on the parameters in
 the Table Map.
  If this function evaluates to a non-zero result, and an appropriate control
 is present on the table (slider, swag field), then the Autoplayer will
 move all in.
\end_layout

\begin_layout Subsection*
f$swag
\end_layout

\begin_layout Standard
This function instructs the Autoplayer to place a stated wager (SWAG) by
 entering the bet into the SWAG box.
  If this function evaluates to a non-zero result, and the SWAG box is present
 on the table, then the Autoplayer will enter the results of f$swag into
 the SWAG box and confirm the bet.
\end_layout

\begin_layout Subsection
f$raise
\end_layout

\begin_layout Standard
This function instructs the Autoplayer to raise.
  If this function evaluates to a non-zero result, and the raise button
 is present on the table, then the Autoplayer will click the raise button.
\end_layout

\begin_layout Subsection
f$call
\end_layout

\begin_layout Standard
This function instructs the Autoplayer to call.
  If this function evaluates to a non-zero result, and the call button is
 present on the table, then the Autoplayer will click the call button.Secondary
 FunctionsThe following table describes the secondary functions.
  These are secondary, because they do not directly instruct the Autoplayer
 to take action, but rather are used indirectly to determine the action,
 some of which are not the traditional poker actions of all-in, raising,
 checking, calling or folding.Function Description 
\end_layout

\begin_layout Subsection
f$P
\end_layout

\begin_layout Standard
This function is intended to evaluate to the number of opponents that should
 be simulated when OpenHoldem calculates various symbols.The symbols influenced
 by this function are those calculated by the Iterator (see {The Iterator}
 section}, prwin, prlos, and prtie, and also by the symbols prwinnow, prlosnow,
 and handrankp.The f$P value is important to these symbols because it determines
 how many opposing hands are simulated.
 The f$P value will radically affect the values of these symbols.
  For example, the higher the f$P value the more opponent hands will be
 simulated and your win probability will be lower.
 Similarly, the lower the f$P value the less opponent hands will be simulated
 and your win probability will be higher.
  For instance, AA against 9 opponents (f$P==9) has about a 30% chance of
 winning, assuming every hand stays for the showdown (no-foldem).
  AA against 1 opponent (P=1) has about an 80% chance of winning.
  The possible values for f$P are 0 to 22, both inclusive.
 If f$P exceeds 22, it will be set to 22, as 22 is the maximum number of
 players our imaginary HoldEm table would be able to play (22 opponents
 * 2 cards = 44 cards, my two cards, the 5 common cards).
\end_layout

\begin_layout Subsection
f$srai
\end_layout

\begin_layout Standard
This function is a support function for f$swag.
  The intent is that f$srai specifies the amount to raise above the current
 bet, and that f$swag then further adjusts that based on the style that
 the individual casino uses to post SWAG bets.
  Here is an example of a vanilla f$swag function that calls f$srai:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

##f$swag##
\end_layout

\begin_layout Plain Layout

f$srai>0 ? ((((f$swag_adjust + f$srai)/sblind)+.5)^0)*sblind : 0
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

##f$swag_adjust##
\end_layout

\begin_layout Plain Layout

swagtextmethod == 3 ? (call + currentbet) : 
\end_layout

\begin_layout Plain Layout

swagtextmethod == 2 ? (call) : 
\end_layout

\begin_layout Plain Layout

0
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Note that this f$swag also rounds your bet to the nearest sblind.
\end_layout

\begin_layout Subsection
f$prefold
\end_layout

\begin_layout Standard
If this function evaluates to non-zero, and a pre-fold button is visible
 on the poker table window (as defined in the Table Map), then OpenHoldem
 will engage that pre-fold button as soon as it can (which may be before
 it is your turn to act).
 A good example of a f$prefold function might be the following:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

##f$prefold##
\end_layout

\begin_layout Plain Layout

br==1 
\end_layout

\begin_layout Plain Layout

&& nplayersdealt>4 
\end_layout

\begin_layout Plain Layout

&& handrank2652>2652*0.66 
\end_layout

\begin_layout Plain Layout

&& !currentbet && !f$swag &&!!!??? && !f$raise && !f$call
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
f$delay
\end_layout

\begin_layout Standard
The function controls how long to delay, once the specified number of stable
 frames have been seen (see {Preferences} section}, to take a poker action.
 The function evaluates to the delay time in milliseconds.An example of this
 might be:
\end_layout

\begin_layout Subsection
f$chat
\end_layout

\begin_layout Standard
f$playThis function controls how the Autoplayer interacts with the sitin,
 sitout, and leave buttons as defined in the Table Map.
 The possible values that this function can return are explicit and limited.
  Any other return values are ignored.
 The allow return values and their meaning are: -2, Leave table -1, No change
 (if you are sitting out, stay out, if sitting in stay that way) 0, Sit
 out 1, Sit in/Stay inf$evraisf$evcallHelper FunctionsThe following table
 describes the helper functions.
  These are not used by the Autoplayer.Function Description 
\end_layout

\begin_layout Subsection
Notes
\end_layout

\begin_layout Standard
This is a free form function for you to use as you please.
  This is typically used for usage instructions and version notes.
\end_layout

\begin_layout Subsection
dll
\end_layout

\begin_layout Standard
Contains a filename or path to a DLL to load by default.
 For example: my_user_dll.dll
\end_layout

\begin_layout Subsection
f$test
\end_layout

\begin_layout Standard
This function is intended to be used to test expressions.
 Whatever is typed in here gets calculated as a whole when the "Calc" button
 is clicked.
 f$test can be referenced from other formulas, although that is not recommended,
 as f$test is really intended as a development/debugging aid.
 
\end_layout

\begin_layout Subsection
f$debug
\end_layout

\begin_layout Standard
The debug function operates differently than the other function.
 Its purpose is to allow for arbitrary expressions to be evaluated and the
 results of those expressions to be displayed.
 To add a new expression add a new line with an equal sign, followed by
 the expression.
 For example: 
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

= 2+2
\end_layout

\begin_layout Plain Layout

= f$UserDefinedFormula
\end_layout

\begin_layout Plain Layout

= nopponents
\end_layout

\end_inset


\end_layout

\begin_layout Standard
In order for the results to be displayed you must either press the 'Calc'
 or 'Auto' button.
 The 'Auto' button will recalculate the debug formula once each heartbeat.
 For example: 
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

4 = 2+2
\end_layout

\begin_layout Plain Layout

1 = f$UserDefinedFormula
\end_layout

\begin_layout Plain Layout

6 = nopponents
\end_layout

\end_inset


\end_layout

\begin_layout Standard
If an expression is invalid it will be reported where the result would normally
 be found.
 
\end_layout

\begin_layout Subsection
Menu Options
\end_layout

\begin_layout Standard
Figure 5.11-38 Formula Editor - File menuThe File menu has three options
 to control how changes made to your formula are applied back to the production
 formula:Apply:  Copy changes made to the working formula to the production
 formula and keep the Formula Editor window openOK:  Copy changes made to
 the working formula to the production formula and close the Formula Editor
 windowCancel:  Discard changes made to the working formula and close the
 Formula Editor windowFigure 5.11-39 Formula Editor - Edit menuThe Edit menu
 has a number of options:Undo, Redo, Find, Cut, Copy, Paste, Delete Text,
 Select All:  These are all standard Windows menu items that operate in
 the standard way.Font:  This menu option opens the standard Windows font
 selector dialog to allow you to select the font to display in the Scintilla
 editor window.
\end_layout

\begin_layout Standard
Settings:  This opens a window that allows you to set the Bankroll, Defcon,
 NIT, and Rake parameters of the formula file.
  These settings can be used in your formulas, and are referenced by some
 symbols.
\end_layout

\begin_layout Standard
Hand List:  When a Hand List is selected, this will open the Hand List Editor
 window so you can specify which starting hands belong in the selected Hand
 List.
  See the section about Hand Lists for more information.
\end_layout

\begin_layout Standard
Figure 5.11-40 Formula Editor - View menu
\end_layout

\begin_layout Standard
The View menu has the standard Windows toolbar option, plus several OpenHoldem
 specific options:
\end_layout

\begin_layout Standard
Show Line Numbers, 
\end_layout

\begin_layout Standard
Show Selection Margin, 
\end_layout

\begin_layout Standard
Show Folding Margin, and Syntax Coloring provide access to features of the
 Scintilla Control (see 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://www.scintilla.org
\end_layout

\end_inset

 for more information).
 Sort UDFs and Group UDFs allow for grouping and sorting of User Defined
 Functions that you create.
  These options simply allow for ease of navigation, especially for formulas
 with large numbers of UDFs.Figure 5.11-41 Formula Editor - Debug menuFigure
 5.11-42 Formula Editor - Help menu	
\end_layout

\begin_layout Standard
The Help menu provides links to the OpenHoldem Wiki and to the OpenHoldem
 discussion forums.ToolbarFigure 5.11-43 OpenHoldem Formula Editor toolbar
\end_layout

\begin_layout Standard
From left to right, the buttons on the Main toolbar are:
\end_layout

\begin_layout Itemize
New function/hand list (empty document)
\end_layout

\begin_layout Itemize
Rename function/hand list (pencil)
\end_layout

\begin_layout Itemize
Delete function/hand list (big X)
\end_layout

\begin_layout Itemize
Open the Windows font selection dialog (two blue letter As)
\end_layout

\begin_layout Itemize
Open the Formula Parameters window (hand pointing at a document)
\end_layout

\begin_layout Itemize
Open the Hand List Editor window (3x3 squares)
\end_layout

\end_body
\end_document
