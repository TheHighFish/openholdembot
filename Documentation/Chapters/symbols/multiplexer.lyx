#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass amsbook
\use_default_options true
\begin_modules
theorems-ams
eqs-within-sections
figs-within-sections
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 0
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 0
\use_package mhchem 1
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth -2
\tocdepth -2
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Multiplexer
\end_layout

\begin_layout Standard
The multiplexer-engine is a module that enables you to access lots of symbols
 in a poker-logical way.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/multiplexer.jpg

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section*
Historic background
\end_layout

\begin_layout Standard
The philosophy of WinHoldem in the by-gone past and early OpenHoldem was:
 provide technical symbols and let the user do all the rest.
 For example there were symbols currentbet0..currentbet9 for the bets of the
 chairs 0,.9.
 If the user wanted to figure out the currentbet of the big blind he first
 had to create a function that identified the big-blind-chair
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

##f$bigblindchair##
\end_layout

\begin_layout Plain Layout

// Chair 0 dealt 2nd?
\end_layout

\begin_layout Plain Layout

ac_dealpos0 == 2 ? 0 :
\end_layout

\begin_layout Plain Layout

// Chair 1 dealt 2nd?
\end_layout

\begin_layout Plain Layout

ac_dealpos1 == 2 ? 1 :
\end_layout

\begin_layout Plain Layout

// Chair 2 dealt 2nd?
\end_layout

\begin_layout Plain Layout

ac_dealpos2 == 2 ? 2 :
\end_layout

\begin_layout Plain Layout

...
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This functions looks for the chair that got dealt 2nd and returns the chair
 number, assuming it is the big-blind (it ignores some finer details like
 a missing small-blind or reversed blinds headsup).
 With this function it is now possbile to lookup the currentbet of the big-blind
 in a similar way:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

##f$bigblindcurrentbet##
\end_layout

\begin_layout Plain Layout

WHEN bigblindchair == 0 RETURN currentbet0 FORCE
\end_layout

\begin_layout Plain Layout

WHEN bigblindchair == 1 RETURN currentbet1 FORCE
\end_layout

\begin_layout Plain Layout

WHEN bigblindchair == 2 RETURN currentbet2 FORCE
\end_layout

\begin_layout Plain Layout

...
\end_layout

\begin_layout Plain Layout

WHEN bigblindchair == 9 RETURN currentbet9 FORCE
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Doable, but somewhat clumsy and lots of work, as such functions had to be
 created for every logical chair and for every symbol you, the user, wanted
 to access.
\end_layout

\begin_layout Section*
The new multiplexer
\end_layout

\begin_layout Standard
First: OpenHoldem provides more than a dozen built-in logical chair-symbols
 like dealerchair, firstraiserchair, lastcallerchair utgchair.
 Second: the multiplexer-engine makes it possible to use these chair-symbols
 for indexing numbered symnols.
 For example you can now write:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

WHEN currentbet_lastraiserchair > ...
\end_layout

\begin_layout Plain Layout

WHEN balance_bigblindchair <= ...
\end_layout

\begin_layout Plain Layout

WHEN pt_vpip_smallblindchair < ...
\end_layout

\end_inset


\end_layout

\begin_layout Section*
Chair symbols supported
\end_layout

\begin_layout Standard
The multiplexer-engine supports the following chair-symbols for indexing
 other symbols:
\end_layout

\begin_layout Itemize
userchair
\end_layout

\begin_layout Itemize
bigblindchair
\end_layout

\begin_layout Itemize
smallblindchair
\end_layout

\begin_layout Itemize
dealerchair
\end_layout

\begin_layout Itemize
buttonchair (synonym for dealerchair)
\end_layout

\begin_layout Itemize
cutoffchair
\end_layout

\begin_layout Itemize
mp3chair
\end_layout

\begin_layout Itemize
mp2chair
\end_layout

\begin_layout Itemize
mp1chair
\end_layout

\begin_layout Itemize
ep3chair
\end_layout

\begin_layout Itemize
ep2chair
\end_layout

\begin_layout Itemize
ep1chair
\end_layout

\begin_layout Itemize
utgchair (under the gun, the player behind big blind, first to act preflop)
\end_layout

\begin_layout Itemize
firstraiserchair
\end_layout

\begin_layout Itemize
lastraiserchair
\end_layout

\begin_layout Itemize
raischair (historic synonym for lastraiserchair)
\end_layout

\begin_layout Itemize
firstcallerchair
\end_layout

\begin_layout Itemize
lastcallerchair
\end_layout

\begin_layout Itemize
headsupchair (chair of your last remaining opponent)
\end_layout

\begin_layout Itemize
bigstackchair
\end_layout

\begin_layout Itemize
smallstackchair
\end_layout

\begin_layout Section*
Betrounds
\end_layout

\begin_layout Standard
Besides chair symbols the multiplexer engine supports also betting-round
 symbols for indexing of game-history symbols.
 It is now possible to write code like ncurentbets_previousround or the
 verbose nplayersround_flop instead of nplayersround2.
 Symbols supported:
\end_layout

\begin_layout Itemize
preflop
\end_layout

\begin_layout Itemize
flop
\end_layout

\begin_layout Itemize
turn
\end_layout

\begin_layout Itemize
river
\end_layout

\begin_layout Itemize
currentround
\end_layout

\begin_layout Itemize
previousround
\end_layout

\begin_layout Section*
Suits
\end_layout

\begin_layout Standard
Additionally the new symbols suitbitsplayerN (N = 0..3) and rankbitsplayerN
 can be addressed in a verbose way with the following multiplexer-postfixes.
\end_layout

\begin_layout Itemize
clubs
\end_layout

\begin_layout Itemize
diamonds
\end_layout

\begin_layout Itemize
hearts
\end_layout

\begin_layout Itemize
spades
\end_layout

\begin_layout Section*
PokerTracker
\end_layout

\begin_layout Standard
In the past OpenHoldem supported similar functionality for PokerTracker
 symbols only.These symbols get now also handled by the multiplexer in order
 to avoid duplicate functionality in the code-base.
 as a consequence some symbols got renamed slightly.
 E.g.
 pt_vpip_lastcallerchair instead of the former pt_vpip_lastcaller.
\end_layout

\begin_layout Section*
OpenPPL and user-defined symbols
\end_layout

\begin_layout Standard
Of course the multiplexer-engine works also for OpenPPL.
 For example the OpenPPL-library contains technical functions StackSize0..Stacksiz
e9 and the values can be addressed in a logical way like StackSize_dealerchair.
 And of course it works for user-defined functions exactly the same way.
 
\end_layout

\end_body
\end_document
