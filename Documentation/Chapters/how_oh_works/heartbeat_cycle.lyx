#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass amsbook
\use_default_options true
\begin_modules
theorems-ams
eqs-within-sections
figs-within-sections
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 0
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 0
\use_package mhchem 1
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth -2
\tocdepth -2
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section*
The Heartbeat-Cycle
\end_layout

\begin_layout Standard
Once OpenHoldem has been connected to a table, it will enter into a continuous
 loop that performs a variety of actions.
 The cycle of these actions is described here in order of their execution.
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="10" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top" width="25text%">
<column alignment="left" valignment="top" width="75text%">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Action
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Explanation
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Scrape window
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ask the 
\emph on
screen scraper
\emph default
 engine to scrape and interpret the current pixels on the poker window based
 on the parameters in the loaded tablemap.
 The scraper will look for example if a chair is occupied, if the player
 is sittong out, what the players betsize is and so on.
 It then will hand over this information to the game-state-engine.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Scraper preprocessor
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
OpenHoldems built-in 
\emph on
scraper preprocessor
\emph default
 will then preprocess some textual input from the scraper; especially title-stri
ng, bets and balances.
 For example it will remove spaces inside numbers, replace commas inside
 numbers by dots, replace outlandish currency-signs by dollars or remove
 other superflous texts, such as 
\begin_inset Quotes eld
\end_inset

pot: (150 + 300)
\begin_inset Quotes erd
\end_inset

.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Create replay frames
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
If a 
\emph on
replay frame
\emph default
 is requested in preferences , OpenHoldem will store an image file and a
 HTML-file in the replay-directory for a future settion-review with OHReplay
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Calculate symbols
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Calculate the built-in OpenHoldem 
\emph on
symbols
\emph default
 that can be accessed by the user-defined poker-logic.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Validate game state
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
If the 
\emph on
validator
\emph default
 is enabled in preferences , then it will check the current game state for
 inconsistencies that are usually caused by mis-scrapes or bad tablemaps.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Evaluate the bot-logic
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
If it is our turn and the scraper-engine saw enough 
\emph on
stable frames
\emph default
 then OpenHoldem will evaluate the set of formulas that got provided by
 the user.
\end_layout

\begin_layout Itemize
OH-script: f$alli..f$fold
\end_layout

\begin_layout Itemize
OpenPPL: f$preflop..f$river
\end_layout

\begin_layout Plain Layout
This user-defined bot-logic usually resides in a plain-text file with the
 extension *.ohf (OpenHoldem formula), *.oppl (OpenPPL) or *.txt (also OpenPPL)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
Handle spam	
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
Evaluate any i86 regions, and dismiss any popups that occlude the table.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Autoplay
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
If the autoplayer is engaged, then OpenHoldem will act: press buttons, enter
 betsizes, move the slider.
 The autoplayer will try to execute the most aggressive actions first, then
 continue with less agressive ones, i.e.
 in the following order:
\end_layout

\begin_layout Itemize
f$alli
\end_layout

\begin_layout Itemize
f$betpot_2_1 ..
 f$betpot_1_4
\end_layout

\begin_layout Itemize
f$betsize
\end_layout

\begin_layout Itemize
f$rais
\end_layout

\begin_layout Itemize
f$call
\end_layout

\begin_layout Itemize
f$check
\end_layout

\begin_layout Itemize
f$fold
\end_layout

\begin_layout Plain Layout
The autoplayer works -- as the name suggests -- automatically, but the necessary
 actions differ a bit for each casino, therefore the autoplayer can be customize
d with the tablemap.
 For example you can tell how an old betsize should be selected before a
 new one can be entered:
\end_layout

\begin_layout Plain Layout
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

s$betsizeselectionmethod       Click Drag
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
We will deal with that in the chapter about tablemaps.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Wait
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sleep for some time, then start the next cycle.
 The heartbeat-sleeping-time can be specified in the preferences and defaults
 to 750
\begin_inset space ~
\end_inset

ms.
 However the heartbeat delay is somewhat flexible: we scrape faster if it
 is our turn to act for faster reaction times and we sleep longer when we
 have no cards (folded) or if we are not seated at all to optimize CPU-usage.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_body
\end_document
