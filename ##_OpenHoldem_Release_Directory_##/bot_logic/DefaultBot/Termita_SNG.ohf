##Termita_Notes##
//////////////////////////////////////////////////////////////////
//
// Description
// ===========
// A full-ring beginners SitNGo profile
//
// Table:   Full Ring
// Turbo:   Unknown
// Target:  Unknown... depends on how much extra work you put in
// Version: OpenHoldem 13.0.3
//
// Authors:
// ========
//   * Tetre (BonusBots)
//   * Termitapalahermita aka Xiquetete (BonusBots)
//   * Trish
//   * TheHighFish
//
//////////////////////////////////////////////////////////////////
//
// Playing logic preflop
//
//////////////////////////////////////////////////////////////////

##Termita_SNG_Preflop##
//
// Pot Commited
// If we are more than 1/3 stack into the pot, we are committed
// If we get to < 2 BB at any stage except HeadsUp, we shove if
// in a blind
//
// Personally, I don't think 1/3 of the stack really commits us, we
// are a bot afterall, AND able to come back from small stacks (Trish)
//
// Overrides
WHEN TotalInvested > 33% StackSize RaiseMax FORCE
// Added raise sitouts
When Calls = 0 and Raises = 0 AND OpponentsLeftSittingOut RaiseMin FORCE
When BotsLastAction = Raise And listCat2 RaiseMax Force
//
WHEN OnlyTwoPlayersLeftAtTournamentTable RETURN f$Termita_SNG_Preflop_HeadsUp FORCE
WHEN InTheMoney And PlayersLeftInTournament > 2    RETURN f$Termita_SNG_Preflop_InTheMoney FORCE
When IsBubble      RETURN f$Termita_SNG_Preflop_Bubble FORCE
When f$LateStage   RETURN f$Termita_SNG_Preflop_LateStage Force
WHEN f$EarlyStage  RETURN f$Termita_SNG_Preflop_EarlyStage FORCE
When f$MiddleStage Return f$Termita_SNG_Preflop_MiddleStage FORCE


//////////////////////////////////////////////////////////////////
//
// Heads Up Play
//
//////////////////////////////////////////////////////////////////

##f$Termita_SNG_Preflop_HeadsUp##
//
// In the Small Blind
// 1.   WHEN either stack < 8BB push ATC @Trish Change this Done
// 2.   WHEN either stack 8-12 BB Push Category 8 OR better
// 3,   WHEN more than 12 BB RaiseBy 3 for Category 8 OR better AND call
//   with category 5 OR better
//

// Crippled in the blinds
When f$Stack_0_2 RaiseMax Force
// Temp Out Trish
//When f$HandRank2Way <= (2652*f$SS_Blind_HU_Log) RaiseMax FORCE
When handrank2652 <= (2652*f$SS_Blind_HU_Log) RaiseMax FORCE

WHEN InSmallBlind
   WHEN BotsLastAction = Raise AND f$Stack_12P AND listHUCat1 RaiseMax FORCE
   WHEN BotsLastAction = Raise AND f$Stack_12P AND listHUCat5 Call FORCE
   WHEN f$FirstAction AND f$Stack_12P AND listHUCat8 RaiseBy 3 FORCE
   WHEN f$Stack_8_12 AND listHUCat8 RaiseMax FORCE
//
// In the Big Blind AND Small Blind Limps
// 1. With either stack less than 8 BB push ATC @Trish change this Done
// 2. With either stack 8-12 BB Push Category 7 OR better
// 3. With either stack > 12BB RaiseBy 4 with Category 6 OR better AND
//   call with Category 4 OR better
//
WHEN InBigBlind
   WHEN BotsLastAction = Raise AND f$Stack_12P AND listHUCat1 RaiseMax FORCE
   WHEN BotsLastAction = Raise AND f$Stack_12P AND listHUCat4 Call FORCE
   WHEN f$FirstAction AND f$Stack_12P AND Raises = 0 AND listHUCat6 RaiseBy 3 FORCE
   WHEN f$Stack_8_12 And Raises = 0 AND listHUCat7 RaiseMax FORCE
//
// In the Big Blind AND Small Blind Raises
// I can't remember the ruleset, but you can re-create it from code if need be
//
WHEN InBigBlind And f$FirstAction
   WHEN f$Stack_12P AND Raises = 1 AND AmountToCall > 3 AND listHUCat5 RaiseMax FORCE
//
// Raise to 4 times the small Raisers Raise. 
// Sometimes they want a cheap flop
//
   WHEN f$Stack_12P AND Raises = 1 AND AmountToCall <= 3 AND listHUCat5 RaiseBy (4 * AmountToCall) FORCE
   WHEN f$Stack_12P AND Raises = 1 AND AmountToCall <= 3 AND listHUCat7 Call FORCE
   WHEN f$Stack_4_12 AND Raises = 1 AND listHUCat6 RaiseMax FORCE
   WHEN f$Stack_2_4 AND Raises = 1 AND listHUCat7 RaiseMax FORCE
   
When Others
	When Others Fold Force

//////////////////////////////////////////////////////////////////
//
// InTheMoney 3Way Play
//
//////////////////////////////////////////////////////////////////

##f$Termita_SNG_Preflop_InTheMoney##
//
// Take opponents off the table with premium hands
//
WHEN OpponentIsAllin AND listITMCat1 RaiseMax FORCE
//
// Regular processing of Opponent All In with 2 OR more in the pot
// Get out of the way if 2 Opponents want to clash
//
WHEN OpponentIsAllin AND f$FirstAction AND (CallsSinceLastRaise > 0 OR Raises > 1) Fold FORCE
//
// Shoving as short-stack 
//
WHEN InTheBlinds AND f$Stack_0_2 RaiseMax FORCE
//
// BigBlind, big-stack, opponent is allin
//
WHEN InBigBlind AND f$InTheMoney_BigStack AND OpponentIsAllin
   // Facing small raise 0..2 bb		
   WHEN AmountToCall < 2 AND listITMCat8 Call FORCE
   // Facing raise 2..4 bb
   WHEN AmountToCall >= 2 AND AmountToCall < 4 AND listITMCat7 Call FORCE
   // Facing raise 4..6 bb
   WHEN AmountToCall >= 4 AND AmountToCall < 6 AND listITMCat6 Call FORCE
   // Facing raise 6..8 bb
   WHEN AmountToCall >= 6 AND AmountToCall < 8 AND listITMCat5 Call FORCE
   // Facing large raise >8 bb
   WHEN AmountToCall >= 8 AND listITMCat4 Call FORCE
//
// Not big-blind, big-stack, opponent is allin
//
WHEN NOT InBigBlind AND f$InTheMoney_BigStack AND OpponentIsAllin
   // Facing small raise 0..2 bb		
   WHEN AmountToCall < 2 AND listITMCat7 Call FORCE
   // Facing raise 2..4 bb
   WHEN AmountToCall >= 2 AND AmountToCall < 4 AND listITMCat6 Call FORCE
   // Facing raise 4..6 bb
   WHEN AmountToCall >= 4 AND AmountToCall < 6 AND listITMCat5 Call FORCE
   // Facing raise 6..8 bb
   WHEN AmountToCall >= 6 AND AmountToCall < 8 AND listITMCat4 Call FORCE
   // Facing large raise >8 bb
   WHEN AmountToCall >= 8 AND listITMCat3 Call FORCE
//
// BigBlind, middle-stack, opponent is allin
// 
WHEN InBigBlind AND f$InTheMoney_MiddleStack AND OpponentIsAllin
   // Facing small raise 0..2 bb
   WHEN AmountToCall < 2 AND listITMCat6 Call FORCE
   // Facing raise 2..4 bb
   WHEN AmountToCall >= 2 AND AmountToCall < 4 AND listITMCat5 Call FORCE
   // Facing raise 4..6 bb
   WHEN AmountToCall >= 4 AND AmountToCall < 6 AND listITMCat4 Call FORCE
   // Facing raise 6..8 bb
   WHEN AmountToCall >= 6 AND AmountToCall < 8 AND listITMCat3 Call FORCE
   // Facing large raise >8 bb
   WHEN AmountToCall >= 8 AND listITMCat2 Call FORCE
//
// Not BigBlind, middle-stack, opponent is allin
// 
WHEN NOT InBigBlind AND f$InTheMoney_MiddleStack AND OpponentIsAllin
   // Facing small raise 0..2 bb
   WHEN AmountToCall < 2 AND listITMCat5 Call FORCE
   // Facing raise 2..4 bb
   WHEN AmountToCall >= 2 AND AmountToCall < 4 AND listITMCat4 Call FORCE
   // Facing raise 4..6 bb
   WHEN AmountToCall >= 4 AND AmountToCall < 6 AND listITMCat3 Call FORCE
   // Facing raise 6..8 bb
   WHEN AmountToCall >= 6 AND AmountToCall < 8 AND listITMCat2 Call FORCE
   // Facing large raise >8 bb
   WHEN AmountToCall >= 8 AND listITMCat1 Call FORCE
//
// BigBlind, small-stack, opponent is allin
// 
WHEN InBigBlind AND f$InTheMoney_SmallStack AND OpponentIsAllin
   // Facing small raise 0..2 bb
   WHEN AmountToCall < 2 AND listITMCat8 Call FORCE
   // Facing raise 2..4 bb
   WHEN AmountToCall >= 2 AND AmountToCall < 4 AND listITMCat7 Call FORCE
   // Facing raise 4..6 bb
   WHEN AmountToCall >= 4 AND AmountToCall < 6 AND listITMCat6 Call FORCE
   // Facing raise 6..8 bb
   WHEN AmountToCall >= 6 AND AmountToCall < 8 AND listITMCat5 Call FORCE
   // Facing large raise >8 bb
   WHEN AmountToCall >= 8 AND listITMCat4 Call FORCE
//
// Not BigBlind, small-stack, opponent is allin
// 
WHEN NOT InBigBlind AND f$InTheMoney_SmallStack AND OpponentIsAllin
	// Facing small raise 0..2 bb
   WHEN AmountToCall < 2 AND listITMCat7 Call FORCE
   // Facing raise 2..4 bb
   WHEN AmountToCall >= 2 AND AmountToCall < 4 AND listITMCat6 Call FORCE
   // Facing raise 4..6 bb
   WHEN AmountToCall >= 4 AND AmountToCall < 6 AND listITMCat5 Call FORCE
   // Facing raise 6..8 bb
   WHEN AmountToCall >= 6 AND AmountToCall < 8 AND listITMCat4 Call FORCE
   // Facing large raise >8 bb
   WHEN AmountToCall >= 8 AND listITMCat3 Call FORCE
// 
// Process the Not Opponent is All in scenario now
// NOTE: Due to an issue with MaxStillToActStackSize, this code is using the values
//      from OpponentsWithHigherStack AND OpponentsWithLowerStack to determine 
//      what to do. Since MiddleStack does not know the size of the next opponent
//      the "safer range" of shoving into a larger stack is used
// Tetre - V_009 06/10/2011
// Trish I changed this based on start of hand equity I think it was the intention but
// maybe not easily done in the PPL at the time
//
// !!! code looks half-made
// 	   Trish adding some code needs more but not sure how to go with it
//	   will review this later 
//	   
When Others 
	When f$Stack_0_2 RaiseMax FORCE
	When f$Stack_0_4 And Raises = 0 And listGen2Way50pc RaiseMax Force
	WHEN BotsLastAction = Raise AND listHUCat1 RaiseMax FORCE
    WHEN BotsLastAction = Raise AND listHUCat5 Call FORCE
	When BotsLastAction = Call And AmountToCall <= 1 Call FORCE
	

WHEN f$InTheMoney_BigStack AND NOT (OpponentIsAllin)
   WHEN listITMCat8 RaiseMax FORCE
   When (InButton OR InSmallBlind) And Raises = 0 And Calls = 0 And f$Stack_14_P And listGen2Way55pc RaiseBy 2 Force
   When InBigBlind And Raises = 0 And Calls = 1 And f$Stack_14_P And listGen2Way47pc RaiseBy 2 Force
   
WHEN f$InTheMoney_MiddleStack AND NOT (OpponentIsAllin)
   WHEN listITMCat7 RaiseMax FORCE
   When InButton And Raises = 0 And Calls = 0 And f$Stack_0_8 And listITMCat8 RaiseMax Force
// !!! inclear who commented this out
//   WHEN f$InTheMoney_MiddleStack AND listITMCat8 RaiseMax FORCE

WHEN f$InTheMoney_SmallStack AND NOT (OpponentIsAllin)
   WHEN listITMCat8 RaiseMax FORCE
   
When InSmallBlind AND Raises = 0 AND Calls = 1
	When NOT (f$Stack_0_12) And listGen2Way50pc Call Force
	
When Others
	When Others Fold Force

//////////////////////////////////////////////////////////////////
//
// Bubble Play - 
//
//////////////////////////////////////////////////////////////////

##f$Termita_SNG_Preflop_Bubble##

// Crippled in the blinds
WHEN InTheBlinds AND f$Stack_0_2 RaiseMax FORCE
When ante > 0 And f$Stack_0_2 RaiseMax FORCE

WHEN OpponentIsAllin 
	When listBubbleCat1 RaiseMax FORCE
	// Regular processing of Opponent All In with 2 OR more in the pot
	// Get out of the way if 2 Opponents want to clash
	WHEN f$FirstAction AND (CallsSinceLastRaise > 0 OR Raises > 1) Fold FORCE

// Now Play based on StackSize 
//
//////////////////////////////////////////////////////////////////
// Bubble Play - Biggest Stack
//////////////////////////////////////////////////////////////////

WHEN f$Bubble_BigStack AND OpponentIsAllin And InBigBlind
 //   WHEN we are in the big Blind
   WHEN AmountToCall < 2 Call FORCE 
   WHEN AmountToCall >= 2 AND AmountToCall < 4 AND listBubbleCat6 Call FORCE
   WHEN AmountToCall >= 4 AND AmountToCall < 6 AND listBubbleCat5 Call FORCE
   WHEN AmountToCall >= 6 AND AmountToCall < 8 AND listBubbleCat4 Call FORCE
   WHEN AmountToCall >= 8 AND AmountToCall < 10 AND listBubbleCat3 Call FORCE
   WHEN AmountToCall >= 10 AND listBubbleCat1 Call FORCE

WHEN f$Bubble_BigStack AND OpponentIsAllin And Not InBigBlind
 //   WHEN we are NOT in the Big Blind
   WHEN AmountToCall < 2 AND listBubbleCat6 Call FORCE
   WHEN AmountToCall >= 2 AND AmountToCall < 4 AND listBubbleCat5 Call FORCE
   WHEN AmountToCall >= 4 AND AmountToCall < 6 AND listBubbleCat4 Call FORCE
   WHEN AmountToCall >= 6 AND AmountToCall < 8 AND listBubbleCat3 Call FORCE
   WHEN AmountToCall >= 8 AND AmountToCall < 10 AND listBubbleCat2 Call FORCE
   WHEN AmountToCall >= 10 AND listBubbleCat1 Call FORCE

//////////////////////////////////////////////////////////////////
// Bubble Play - One of the Middle Stacks
//////////////////////////////////////////////////////////////////

WHEN f$Bubble_MiddleStack AND OpponentIsAllin And InBigBlind
 //   WHEN we are in the Big Blind
   WHEN AmountToCall < 2 AND listBubbleCat5 Call FORCE
   WHEN AmountToCall >= 2 AND AmountToCall < 4 AND listBubbleCat4 Call FORCE
   WHEN AmountToCall >= 4 AND AmountToCall < 6 AND listBubbleCat3 Call FORCE
   WHEN AmountToCall >= 6 AND AmountToCall < 8 AND listBubbleCat2 Call FORCE
   WHEN AmountToCall >= 8 AND listBubbleCat1 Call FORCE

   WHEN f$Bubble_MiddleStack AND OpponentIsAllin And Not InBigBlind
 //   WHEN we are NOT in the Big Blind
   WHEN AmountToCall < 2 AND listBubbleCat4 Call FORCE
   WHEN AmountToCall >= 2 AND AmountToCall < 4 AND listBubbleCat3 Call FORCE
   WHEN AmountToCall >= 4 AND AmountToCall < 6 AND listBubbleCat2 Call FORCE
   WHEN AmountToCall >= 6 AND listBubbleCat1 Call FORCE

//////////////////////////////////////////////////////////////////
// Bubble Play - Small Stack
//////////////////////////////////////////////////////////////////

WHEN f$Bubble_SmallStack AND OpponentIsAllin And InBigBlind

 //   WHEN we are in the big Blind
   WHEN AmountToCall < 2 Call FORCE
   WHEN AmountToCall >= 2 AND AmountToCall < 4 AND listBubbleCat6 Call FORCE
   WHEN AmountToCall >= 4 AND AmountToCall < 6 AND listBubbleCat5 Call FORCE
   WHEN AmountToCall >= 6 AND AmountToCall < 8 AND listBubbleCat4 Call FORCE
   WHEN AmountToCall >= 8 AND AmountToCall < 10 AND listBubbleCat3 Call FORCE
   WHEN AmountToCall >= 10 AND listBubbleCat1 Call FORCE

  WHEN f$Bubble_SmallStack AND OpponentIsAllin And Not InBigBlind 
 //   WHEN we are NOT in the Big Blind
   WHEN AmountToCall < 2 AND listBubbleCat6 Call FORCE
   WHEN AmountToCall >= 2 AND AmountToCall < 4 AND listBubbleCat5 Call FORCE
   WHEN AmountToCall >= 4 AND AmountToCall < 6 AND listBubbleCat4 Call FORCE
   WHEN AmountToCall >= 6 AND AmountToCall < 8 AND listBubbleCat3 Call FORCE
   WHEN AmountToCall >= 8 AND AmountToCall < 10 AND listBubbleCat2 Call FORCE
   WHEN AmountToCall >= 10 AND listBubbleCat1 Call FORCE

//  Now process regular Bets AND hands
// Second Actions - Raise is superfluous at moment just keeping for future 
When Others
	When (BotsLastAction = Raise OR BotsLastAction = Call) AND AmountToCall <= 1 Call FORCE

WHEN NOT (OpponentIsAllin)
   WHEN (InMiddlePosition2 OR InMiddlePosition3 OR InCutOff) AND Not f$We_Are_Covered AND listBubbleCat2 RaiseMax FORCE
   WHEN (InMiddlePosition2 OR InMiddlePosition3 OR InCutOff) AND Not f$We_Are_Covered AND Raises = 0 AND Calls = 0 AND listBubbleCat7 RaiseMax FORCE

   WHEN (InButton OR InSmallBlind) AND Not f$We_Are_Covered <= StackSize AND listBubbleCat2 RaiseMax FORCE
   WHEN (InButton OR InSmallBlind) AND Not f$We_Are_Covered AND Raises = 0 AND Calls = 0 AND listBubbleCat8 RaiseMax FORCE

   WHEN (InMiddlePosition2 OR InMiddlePosition3 OR InCutOff) AND f$We_Are_Covered AND listBubbleCat2 RaiseMax FORCE
   WHEN (InMiddlePosition2 OR InMiddlePosition3 OR InCutOff) AND f$We_Are_Covered AND Raises = 0 AND Calls = 0 AND listBubbleCat7 RaiseMax FORCE

   WHEN (InButton OR InSmallBlind) AND f$We_Are_Covered AND listBubbleCat2 RaiseMax FORCE
   WHEN (InButton OR InSmallBlind) AND f$We_Are_Covered AND Raises = 0 AND Calls = 0 AND listBubbleCat8 RaiseMax FORCE

   WHEN InBigBlind AND listBubbleCat2 RaiseMax FORCE
   
   // Some ShortStack push code when not opponent is allin, OpponentIsAllin is handled above
	When StackSize <= 10 And Raises = 0 And Calls = 0 And f$FirstAction
	When InSmallBlind And listsb10bb RaiseMax Force
	When InButton And listbu10bb RaiseMax Force
	When InCutOff And listco10bb RaiseMax Force
	When InMiddlePosition And listhj10bb RaiseMax Force

	When StackSize <= 8 And Raises = 0 And Calls = 0 And f$FirstAction
	When InSmallBlind And listsb8bb RaiseMax Force
	When InButton And listbu8bb RaiseMax Force
	When InCutOff And listco8bb RaiseMax Force
	When InMiddlePosition And listhj8bb RaiseMax Force

	When StackSize <= 6 And Raises = 0 And Calls = 0 And f$FirstAction
	When InSmallBlind And listsb6bb RaiseMax Force
	When InButton And listbu6bb RaiseMax Force
	When InCutOff And listco6bb RaiseMax Force
	When InMiddlePosition And listhj6bb RaiseMax Force

	When StackSize <= 5 And Raises = 0 And Calls = 0 And f$FirstAction
	When InSmallBlind And listsb5bb RaiseMax Force
	When InButton And listbu5bb RaiseMax Force
	When InCutOff And listco5bb RaiseMax Force
	When InMiddlePosition And listhj5bb RaiseMax Force
// 													// End Open Push \\
  
When Others
	When Others Fold Force

//////////////////////////////////////////////////////////////////
//
// Late Stage 
//
//////////////////////////////////////////////////////////////////

##f$Termita_SNG_Preflop_LateStage##
// Crippled in the blinds
WHEN InTheBlinds AND f$Stack_0_2 RaiseMax FORCE
// Overrides
When ante > 0 And f$Stack_0_2 RaiseMax FORCE
WHEN listCat2 And Raises > 1 RaiseMax FORCE

// Second Actions
WHEN BotsLastAction = Raise AND listCat3 RaiseMax FORCE
When BotsLastAction = Raise And listCat4 And AmountToCall <= 15% StackSize Call FORCE
When BotsLastAction = Raise And listCat4 And AmountToCall <= 50% StackSize And Opponents <= (1 + CallsSinceLastRaise) Call FORCE
When (BotsLastAction = Raise OR BotsLastAction = Call) AND AmountToCall <= 1 Call FORCE
WHEN BotsLastAction = Raise Fold FORCE

// Late Game - Process the All In Factors First
//////////////////////////////////////////////////////////////////
// Call all in within a multi-way pot. Add additional lines as required
//
// Calling allin with premium hands
WHEN f$OpponentSignificantAllin And f$FirstAction
	When listCat1 And (CallsSinceLastRaise > 0 OR Raises > 1) RaiseMax FORCE
	When listCat2 And Raises <= 1 RaisePot FORCE
	// Get out of the multi-way all in unless very short stacked 
	When (CallsSinceLastRaise > 1 OR Raises > 1) Fold FORCE
	When (CallsSinceLastRaise <= 1 And Raises = 1) And StackSize > 4 Fold FORCE
	WHEN StackSize >= 6 Fold FORCE
   
WHEN f$Stack_12P And f$FirstAction
   // The original was raising Cat 3 by 3BB here
   When Raises > 1 And listCat2 RaiseMax FORCE
   When Raises > 1 Fold FORCE
   WHEN listCat3 And Raises = 1 RaisePot FORCE

WHEN f$Stack_12P And f$FirstAction And Raises = 0   
   WHEN listCat3 RaiseBy f$Termita_PreflopRaise FORCE
   
WHEN f$Stack_12P And f$FirstAction And Raises = 0 And Calls = 0
   WHEN listCat5 AND InEarlyPosition RaiseBy f$Termita_PreflopRaise FORCE
   WHEN listCat6 AND (InMiddlePosition OR InCutOff) RaiseBy f$Termita_PreflopRaise FORCE
   WHEN listCat7 AND (InButton OR InSmallBlind) RaiseBy f$Termita_PreflopRaise FORCE
   
// Complete SmallBlind \\ SetMine PotShots etc
WHEN InSmallBlind And f$Stack_12P And Raises = 0
   	When Calls >= 1 And listSBComp Call Force
	When Calls >= 2 And listSBcompMulti Call Force
	
// Play from BigBlind	
WHEN InBigBlind And f$Stack_12P
	WHEN f$FirstAction And Raises = 0 AND listCat4 RaiseBy f$Termita_PreflopRaise FORCE
	// Call in BigBlind if we close
	When Raises = 1 And AmountToCall < 1.5 And Opponents <= (1 + CallsSinceLastRaise) And listvsMinRaiseBB Call Force
	When Raises = 1 And AmountToCall < 1.5 And CallsSinceLastRaise >= 1 And Opponents <= (1 + CallsSinceLastRaise) And listvsMinRaiseBBPlus Call FORCE
   
// 												// Short Stack Open Push \\
// For obvious reasons this open push repush applies only when we are short stacked 
// A future improvement could be to include something similar for effective short stack
// The lists for this rely a lot on fold equity
// The lists for effective should be based on assumed equity or the ICM

When StackSize <= 12 And Raises = 0 And Calls = 0 And f$FirstAction
	When InSmallBlind And listsb12bb RaiseMax Force
	When InButton And listbu12bb RaiseMax Force
	When InCutOff And listco12bb RaiseMax Force
	When InMiddlePosition And listhj12bb RaiseMax Force
	When InEarlyPosition And listep12bb RaiseMax Force

When StackSize <= 10 And Raises = 0 And Calls = 0 And f$FirstAction
	When InSmallBlind And listsb10bb RaiseMax Force
	When InButton And listbu10bb RaiseMax Force
	When InCutOff And listco10bb RaiseMax Force
	When InMiddlePosition And listhj10bb RaiseMax Force
	When InEarlyPosition And listep10bb RaiseMax Force

When StackSize <= 8 And Raises = 0 And Calls = 0 And f$FirstAction
	When InSmallBlind And listsb8bb RaiseMax Force
	When InButton And listbu8bb RaiseMax Force
	When InCutOff And listco8bb RaiseMax Force
	When InMiddlePosition And listhj8bb RaiseMax Force
	When InEarlyPosition And listep8bb RaiseMax Force

When StackSize <= 6 And Raises = 0 And Calls = 0 And f$FirstAction
	When InSmallBlind And listsb6bb RaiseMax Force
	When InButton And listbu6bb RaiseMax Force
	When InCutOff And listco6bb RaiseMax Force
	When InMiddlePosition And listhj6bb RaiseMax Force
	When InEarlyPosition And listep6bb RaiseMax Force

When StackSize <= 5 And Raises = 0 And Calls = 0 And f$FirstAction
	When InSmallBlind And listsb5bb RaiseMax Force
	When InButton And listbu5bb RaiseMax Force
	When InCutOff And listco5bb RaiseMax Force
	When InMiddlePosition And listhj5bb RaiseMax Force
	When InEarlyPosition And listep5bb RaiseMax Force
	
// Effective Push Code \\ Needs work see above
WHEN f$Stack_5_12
   WHEN listCat4 RaiseMax FORCE
   WHEN listCat5 AND Raises = 0 AND Calls >= 0 RaiseMax FORCE
   WHEN listCat6 AND Raises = 0 AND Calls = 0 AND InEarlyPosition RaiseMax FORCE
   WHEN listCat7 AND Raises = 0 AND Calls = 0 AND (InMiddlePosition OR InCutOff) RaiseMax FORCE
   WHEN listCat8 AND Raises = 0 AND Calls = 0 AND (InButton OR InSmallBlind) RaiseMax FORCE

WHEN f$Stack_0_5
   WHEN listCat5 RaiseMax FORCE
   WHEN listCat6 AND Raises = 0 AND Calls >= 0 RaiseMax FORCE
   WHEN listCat7 AND Raises = 0 AND Calls = 0 RaiseMax FORCE
   WHEN listCat8 AND Raises = 0 AND Calls = 0 AND NOT (InEarlyPosition) RaiseMax FORCE
// 													// End Open Push \\
//
//  		Shortstack Repush // Squeeze // Called/Limped pots are pushed LastRaiserPosition -1
	// Not in a blind \\
When StackSize < 14 And Raises <= 1 And f$FirstAction And Not InTheBlinds
	// Vs EP // Repush and Squeeze
	When LastRaiserPosition >= 7 And listRPnotblindEP13 RaiseMax Force
	When LastRaiserPosition >= 7 And StackSize <= 8 And listRPnotblindEP8 RaiseMax Force
	// Vs MP // Repush and Squeeze
	When LastRaiserPosition < 7 And LastRaiserPosition >= 4 And listRPnotblindMP13 RaiseMax Force
	When LastRaiserPosition < 7 And LastRaiserPosition >= 4 And StackSize <= 9 And listRPnotblindMP9 RaiseMax Force
	When LastRaiserPosition < 7 And LastRaiserPosition >= 4 And StackSize <= 6 And listRPnotblindMP6 RaiseMax Force
	When LastRaiserPosition < 7 And LastRaiserPosition >= 4  And StackSize <= 5 And listRPnotblindMP5 RaiseMax Force
	// Vs CO  // Repush and Squeeze // Also handle limps and calls with <= 3
	When LastRaiserPosition <= 3 And listRPnotblindCO13 RaiseMax Force
	When LastRaiserPosition <= 3 And StackSize <= 11 And listRPnotblindCO11 RaiseMax Force
	When LastRaiserPosition <= 3 And StackSize <= 9 And listRPnotblindCO9 RaiseMax Force
	When LastRaiserPosition <= 3 And StackSize <= 7 And listRPnotblindCO7 RaiseMax Force
	When LastRaiserPosition <= 3 And StackSize <= 6 And listRPnotblindCO6 RaiseMax Force

	// In small blind \\
When StackSize < 14 And Raises <= 1 And f$FirstAction And InSmallBlind
	// Vs EP // Repush and Squeeze
	When LastRaiserPosition >= 7 And listRPsbEP13 RaiseMax Force
	When LastRaiserPosition >= 7 And StackSize <= 8 And listRPsbEP9 RaiseMax Force
	// Vs MP // Repush and Squeeze
	When LastRaiserPosition < 7 And LastRaiserPosition >= 4 And listRPsbMP13 RaiseMax Force
	When LastRaiserPosition < 7 And LastRaiserPosition >= 4 And StackSize <= 7 And listRPsbMP7 RaiseMax Force
	When LastRaiserPosition < 7 And LastRaiserPosition >= 4 And StackSize <= 6 And listRPsbMP6 RaiseMax Force
	When LastRaiserPosition < 7 And LastRaiserPosition >= 4 And StackSize <= 4 And listRPsbMP4 RaiseMax Force
	// Vs CO // Repush and Squeeze
	When LastRaiserPosition = 3 And listRPsbCO13 RaiseMax Force
	When LastRaiserPosition = 3 And StackSize <= 11 And listRPsbCO11 RaiseMax Force
	When LastRaiserPosition = 3 And StackSize <= 8 And listRPsbCO8 RaiseMax Force
	When LastRaiserPosition = 3 And StackSize <= 5 And listRPsbCO5 RaiseMax Force
	When LastRaiserPosition = 3 And StackSize <= 4 And listRPsbCO4 RaiseMax Force
	// Vs BU // Repush and Squeeze // Also handle limps and calls with <= 2
	When LastRaiserPosition <= 2 And listRPsbBU13 RaiseMax Force
	When LastRaiserPosition <= 2 And StackSize <= 10 And listRPsbBU10 RaiseMax Force
	When LastRaiserPosition <= 2 And StackSize <= 8 And listRPsbBU8 RaiseMax Force
	When LastRaiserPosition <= 2 And StackSize <= 6 And listRPsbBU6 RaiseMax Force

	// In Big blind \\
When StackSize < 14 And Raises <= 1 And f$FirstAction And InBigBlind
	// Vs EP // Repush and Squeeze
	When LastRaiserPosition >= 7 And listRPbbEP13 RaiseMax Force
	When LastRaiserPosition >= 7 And StackSize <= 10 And listRPbbEP10 RaiseMax Force
	// Vs MP // Repush and Squeeze
	When LastRaiserPosition < 7 And LastRaiserPosition >= 4 And listRPbbMP13 RaiseMax Force
	When LastRaiserPosition < 7 And LastRaiserPosition >= 4 And StackSize <= 8 And listRPbbMP8 RaiseMax Force
	When LastRaiserPosition < 7 And LastRaiserPosition >= 4 And StackSize <= 7 And listRPbbMP7 RaiseMax Force
	When LastRaiserPosition < 7 And LastRaiserPosition >= 4 And StackSize <= 6 And listRPbbMP6 RaiseMax Force
	When LastRaiserPosition < 7 And LastRaiserPosition >= 4 And StackSize <= 5 And listRPbbMP5 RaiseMax Force
	When LastRaiserPosition < 7 And LastRaiserPosition >= 4 And StackSize <= 4 And listRPbbMP4 RaiseMax Force
	When LastRaiserPosition < 7 And LastRaiserPosition >= 4 And StackSize <= 3 And listRPbbMP3 RaiseMax Force
	When LastRaiserPosition < 7 And LastRaiserPosition >= 4 And StackSize <= 2 And listRPbbMP2 RaiseMax Force
	// Vs CO // Repush and Squeeze
	When LastRaiserPosition = 3 And listRPbbCO13 RaiseMax Force
	When LastRaiserPosition = 3 And StackSize <= 10 And listRPbbCO10 RaiseMax Force
	When LastRaiserPosition = 3 And StackSize <= 8 And listRPbbCO8 RaiseMax Force
	When LastRaiserPosition = 3 And StackSize <= 6 And listRPbbCO6 RaiseMax Force
	When LastRaiserPosition = 3 And StackSize <= 5 And listRPbbCO5 RaiseMax Force
	When LastRaiserPosition = 3 And StackSize <= 4 And listRPbbCO4 RaiseMax Force
	// Vs BU // Repush and Squeeze
	When LastRaiserPosition = 2 And listRPsbBU13 RaiseMax Force
	When LastRaiserPosition = 2 And StackSize <= 10 And listRPbbBU10 RaiseMax Force
	When LastRaiserPosition = 2 And StackSize <= 8 And listRPbbBU8 RaiseMax Force
	When LastRaiserPosition = 2 And StackSize <= 6 And listRPbbBU6 RaiseMax Force
	// Vs SB // Repush and Squeeze // Also handle limps and calls with <= 1
	When LastRaiserPosition <= 1 And listRPbbSB13 RaiseMax Force
	When LastRaiserPosition <= 1 And StackSize <= 10 And listRPbbSB10 RaiseMax Force
	When LastRaiserPosition <= 1 And StackSize <= 8 And listRPbbSB8 RaiseMax Force
	When LastRaiserPosition <= 1 And StackSize <= 7 And listRPbbSB7 RaiseMax Force

When Others
	When Others Fold Force

//////////////////////////////////////////////////////////////////
//
// Middle Stage
//
//////////////////////////////////////////////////////////////////


##f$Termita_SNG_Preflop_MiddleStage##
//////////////////////////////////////////////////////////////////
// Middle Game Play - Blinds > Early blind values AND Opponents = PreBubble
//////////////////////////////////////////////////////////////////

// Crippled in the blinds
WHEN InTheBlinds AND f$Stack_0_2 RaiseMax FORCE
// Overrides
When ante > 0 And f$Stack_0_2 RaiseMax FORCE
WHEN listCat2 And Raises > 1 RaiseMax FORCE

// Second Actions
WHEN BotsLastAction = Raise AND listCat2 RaiseMax FORCE
When BotsLastAction = Raise And listCat3 And AmountToCall <= 15% StackSize Call FORCE
When BotsLastAction = Raise And listCat3 And AmountToCall <= 50% StackSize And Opponents <= (1 + CallsSinceLastRaise) Call FORCE
// If we entered the hand with a Raise or Call, Call a raise of 1 BB OR less
When (BotsLastAction = Raise OR BotsLastAction = Call) AND AmountToCall <= 1 Call FORCE
WHEN BotsLastAction = Raise Fold FORCE

// Middle Game - Process the All In Factors First
//////////////////////////////////////////////////////////////////
// Call all in within a multi-way pot. Add additional lines as required
//
// Calling allin with premium hands
WHEN f$OpponentSignificantAllin And f$FirstAction
	When listCat1 And (CallsSinceLastRaise > 0 OR Raises > 1) RaiseMax FORCE
	When listCat2 And Raises <= 1 RaisePot FORCE
	// Get out of the multi-way all in
	WHEN f$Stack_12P Fold FORCE
	
// Not a significant allin 
WHEN f$Stack_12P And f$FirstAction
   // The original was raising Cat 3 by 3BB here
   When Raises > 1 And listCat2 RaiseMax FORCE
   When Raises > 1 Fold FORCE
   WHEN listCat3 And Raises = 1 RaisePot FORCE

WHEN f$Stack_12P And f$FirstAction And Raises = 0   
   WHEN listCat3 RaiseBy f$Termita_PreflopRaise FORCE
   
WHEN f$Stack_12P And f$FirstAction And Raises = 0 And Calls = 0
   WHEN listCat5 AND InEarlyPosition RaiseBy f$Termita_PreflopRaise FORCE
   WHEN listCat6 AND (InMiddlePosition OR InCutOff) RaiseBy f$Termita_PreflopRaise FORCE
   WHEN listCat7 AND (InButton OR InSmallBlind) RaiseBy f$Termita_PreflopRaise FORCE

// Complete SmallBlind \\ ^SetMine^ // ^PotShots^  \\
WHEN InSmallBlind And f$Stack_12P And Raises = 0
   	When Calls >= 1 And listSBComp Call Force
	When Calls >= 2 And listSBcompMulti Call Force
	
// Play from BigBlind	
WHEN InBigBlind
	WHEN f$FirstAction And Raises = 0 AND listCat4 RaiseBy 2.5 FORCE
// Call in BigBlind if we close - you can increase the amount you want to call or cards if you wish
WHEN f$MiddleStage And InBigBlind And f$Stack_12P
	When Raises = 1 And AmountToCall < 1.5 And Opponents <= (1 + CallsSinceLastRaise) And listvsMinRaiseBB Call Force
	When Raises = 1 And AmountToCall < 1.5 And CallsSinceLastRaise >= 1 And Opponents <= (1 + CallsSinceLastRaise) And listvsMinRaiseBBPlus Call FORCE

WHEN f$Stack_5_12
   WHEN listCat4 RaiseMax FORCE
   WHEN listCat5 AND Raises = 0 AND Calls >= 0 RaiseMax FORCE
   WHEN listCat6 AND Raises = 0 AND Calls = 0 AND InEarlyPosition RaiseMax FORCE
   WHEN listCat7 AND Raises = 0 AND Calls = 0 AND (InMiddlePosition OR InCutOff) RaiseMax FORCE
   WHEN listCat8 AND Raises = 0 AND Calls = 0 AND (InButton OR InSmallBlind) RaiseMax FORCE

WHEN f$Stack_0_5
   WHEN listCat5 RaiseMax FORCE
   WHEN listCat6 AND Raises = 0 AND Calls >= 0 RaiseMax FORCE
   WHEN listCat7 AND Raises = 0 AND Calls = 0 RaiseMax FORCE
   WHEN listCat8 AND Raises = 0 AND Calls = 0 AND NOT (InEarlyPosition) RaiseMax FORCE

When Others
	When Others Fold Force
	
//////////////////////////////////////////////////////////////////
//
// Early Game Play
//
//////////////////////////////////////////////////////////////////

##f$Termita_SNG_Preflop_EarlyStage##
// If we entered the hand with a Raise or Call, Call a raise of 1 BB OR less
When (BotsLastAction = Raise OR BotsLastAction = Call) AND AmountToCall <= 1 Call FORCE
// Crippled in the blinds
WHEN InTheBlinds AND f$Stack_0_2 RaiseMax FORCE
When ante > 0 And f$Stack_0_2 RaiseMax FORCE

// Calling allin with premium hands
WHEN f$OpponentSignificantAllin And f$FirstAction
	When listCat1 And (CallsSinceLastRaise > 0 OR Raises > 1) RaiseMax FORCE
	When listCat2 And Raises <= 1 RaisePot FORCE
	// Get out of the multi-way all in
	WHEN Others Fold FORCE


// Normal play by hand-categories
WHEN f$EarlyStage AND listCat2
   WHEN BotsLastAction = Raise RaiseMax FORCE
   WHEN f$FirstAction And Raises = 0 RaiseBy f$Termita_PreflopRaise FORCE
   WHEN f$FirstAction And Raises > 1 RaiseMax FORCE
   WHEN f$FirstAction RaisePot FORCE
WHEN f$EarlyStage AND listCat3
   When BotsLastAction = Raise And AmountToCall <= 15% StackSize Call FORCE
   When BotsLastAction = Raise And AmountToCall <= 50% StackSize And Opponents <= (1 + CallsSinceLastRaise) Call FORCE
   WHEN BotsLastAction = Raise Fold FORCE 
   When f$FirstAction And Raises > 1 Fold FORCE
   WHEN f$FirstAction And Raises = 0 AND (InLatePosition OR InSmallBlind) RaiseBy f$Termita_PreflopRaise FORCE
   WHEN f$FirstAction AND (InLatePosition OR InSmallBlind) RaisePot FORCE
WHEN f$EarlyStage AND listCat4
   When BotsLastAction = Raise And AmountToCall <= 12% StackSize Call FORCE
   When BotsLastAction = Raise And AmountToCall <= 33% StackSize And Opponents <= (1 + CallsSinceLastRaise) Call FORCE
   WHEN BotsLastAction = Raise Fold FORCE
   When f$FirstAction And Raises > 1 Fold FORCE
   // Check this
   When f$FirstAction And Raises = 0 And Calls <= 1 And (InMiddlePosition2 OR InMiddlePosition3) And StackSize <= (StartingBigBlindSize * 2) RaiseMin Force
   WHEN f$FirstAction And Raises = 0 AND (InLatePosition OR InSmallBlind) RaiseBy f$Termita_PreflopRaise FORCE
   WHEN f$FirstAction AND (InLatePosition OR InSmallBlind) RaisePot FORCE
   
// Complete SmallBlind \\ ^SetMine^ // ^PotShots^  \\
WHEN InSmallBlind And f$Stack_12P And Raises = 0
   	When Calls >= 1 And listSBComp Call Force
	When Calls >= 2 And listSBcompMulti Call Force
	
// Play from BigBlind	
WHEN InBigBlind
	WHEN f$FirstAction And Raises = 0 AND listCat4 RaiseBy 2.5 FORCE
// Call in BigBlind if we close
WHEN InBigBlind And f$Stack_12P
	When Raises = 1 And AmountToCall <= 1 And Opponents <= (1 + CallsSinceLastRaise) And listvsMinRaiseEarlyBB Call Force
	When Raises = 1 And AmountToCall <= 1 And CallsSinceLastRaise >= 1 And Opponents <= (1 + CallsSinceLastRaise) And listvsMinRaiseEarlyBBPlus Call FORCE
   
When Others
	When Others Fold Force

//////////////////////////////////////////////////////////////////
//
// Postflop logic
//
//////////////////////////////////////////////////////////////////

##Termita_SNG_Flop##
Gecko_6Max_FR_NL_BSS_Flop

##Termita_SNG_Turn##
Gecko_6Max_FR_NL_BSS_Turn

##Termita_SNG_River##
Gecko_6Max_FR_NL_BSS_River

//////////////////////////////////////////////////////////////////
//
// User Symbols and Functions
//
//////////////////////////////////////////////////////////////////

##Termita_SNG_Prefold##
When Random < 10 Return false FORCE
When IsPostflop RETURN false FORCE
When (call < 0.01) Return false FORCE
When (InUTG OR InEarlyPosition2) Return false FORCE
When InEarlyPosition3 And Random < 45 Return false FORCE
When nplayersdealt <= 3 Return false FORCE
When Calls = 0 And Raises = 0 And balance_bigblindchair <= (bblind*2) Return false FORCE
When (BigBlindSittingOut Or StackSize <= 4) Return false Force
When listbad Return true FORCE

// ##Termita_SNG_Prwin_number_of_opponents##
// For future use defaults to Gecko for now

##f$OpponentSignificantAllin##
When OpponentIsAllin And InBigBlind And AmountToCall >= 2 Return true FORCE
When OpponentIsAllin And InSmallBlind And AmountToCall >= 2.5 Return true FORCE
When OpponentIsAllin And AmountToCall >= 3 Return true FORCE

##f$Mzone##
balance / (bblind + sblind + (ante*nplayersseated))

##f$TableMzone##
((f$TableAverageStackAtStartOfHand*bblind)  / (bblind + sblind + ante))

##f$TheBiggestActiveOpponentsChips##
// This can be simplified from 13.1.3
bigstackchair == ep1chair ? balance_ep1chair + currentbet_ep1chair :
bigstackchair == ep2chair ? balance_ep2chair + currentbet_ep2chair :
bigstackchair == ep3chair ? balance_ep3chair + currentbet_ep3chair :
bigstackchair == mp1chair ? balance_mp1chair + currentbet_mp1chair :
bigstackchair == mp2chair ? balance_mp2chair + currentbet_mp2chair :
bigstackchair == mp3chair ? balance_mp3chair + currentbet_mp3chair :
bigstackchair == cutoffchair ? balance_cutoffchair + currentbet_cutoffchair :
bigstackchair == dealerchair ? balance_dealerchair + currentbet_dealerchair :
bigstackchair == smallblindchair ? balance_smallblindchair + currentbet_smallblindchair :
bigstackchair == bigblindchair ? balance_bigblindchair + currentbet_bigblindchair :
balance + currentbet

##f$TheBiggestActiveOpponentsStack##
f$TheBiggestActiveOpponentsChips / bblind

##f$EffectiveActiveStackInBigBlinds##
balance + currentbet < f$TheBiggestActiveOpponentsChips ? (balance + currentbet) / bblind :
f$TheBiggestActiveOpponentsStack

##f$TotalDollarsAtThisTable##
// Different to TotalChipsAtTheTable this is not effective just relative
  pot
+ balance0
+ balance1
+ balance2
+ balance3
+ balance4
+ balance5
+ balance6
+ balance7
+ balance8
+ balance9

##f$TableAverageStackAtStartOfHand##
// Different to AverageStackSize, as that is based on effective pot size
(f$TotalDollarsAtThisTable/bblind) / nplayersdealt 

// EffectiveMaxStacksizeOfActiveOpponents wont work for these, if an opponent is all-in 
	// say with 14BB and you have 12BB it will return 0 as it does not include current bets 
	// added a user function f$EffectiveActiveStackInBigBlinds
##f$Stack_0_2##  
WHEN f$EffectiveActiveStackInBigBlinds < 2 Return true FORCE

##f$Stack_0_4##
WHEN (f$EffectiveActiveStackInBigBlinds <= 4) RETURN true FORCE

##f$Stack_0_5##
WHEN f$EffectiveActiveStackInBigBlinds < 5 Return true FORCE

##f$Stack_0_8##
WHEN (f$EffectiveActiveStackInBigBlinds <= 8) RETURN true FORCE

##f$Stack_0_12##
WHEN (f$EffectiveActiveStackInBigBlinds <= 12) RETURN true FORCE

##f$Stack_2_4##
WHEN (f$EffectiveActiveStackInBigBlinds > 4) RETURN false FORCE
WHEN (f$EffectiveActiveStackInBigBlinds <= 2) RETURN false FORCE
WHEN Others RETURN true FORCE

##f$Stack_2_8##
WHEN (f$EffectiveActiveStackInBigBlinds > 8) RETURN false FORCE
WHEN (f$EffectiveActiveStackInBigBlinds <= 2) RETURN false FORCE
WHEN Others RETURN true FORCE

##f$Stack_4_12##
WHEN (f$EffectiveActiveStackInBigBlinds > 12) RETURN false FORCE
WHEN (f$EffectiveActiveStackInBigBlinds <= 4) RETURN false FORCE
WHEN Others RETURN true FORCE

##f$Stack_5_12##
WHEN (f$EffectiveActiveStackInBigBlinds >= 5 AND f$EffectiveActiveStackInBigBlinds < 12) Return true FORCE

##f$Stack_8_12##
WHEN (f$EffectiveActiveStackInBigBlinds > 12) RETURN false FORCE
WHEN (f$EffectiveActiveStackInBigBlinds <= 8) RETURN false FORCE
WHEN Others RETURN true FORCE

##f$Stack_12P##
WHEN f$EffectiveActiveStackInBigBlinds >= 12 Return true FORCE

##f$Stack_14_P##
WHEN (f$EffectiveActiveStackInBigBlinds >= 14) RETURN true FORCE

##f$We_Are_Covered##
When f$TheBiggestActiveOpponentsStack > StackSize Return true FORCE

// I think these should be relatively based on our equity at start of hand 
##f$Bubble_BigStack##
When IsBubble
	When (balance+currentbet) < balance_rank0 Return false FORCE
	// If the difference is insignificant - 10% may not be best here
	When balance_rank1 <= ((balance+currentbet)*0.90) Return true FORCE	
	
##f$Bubble_SmallStack##
When IsBubble
	When f$Bubble_BigStack Return false FORCE
	When OpponentsWithLowerStack = 0 Return true FORCE

##f$Bubble_MiddleStack##
When f$Bubble_BigStack Return false Force
When f$Bubble_SmallStack Return false Force
When IsBubble Return true Force

// Worth thinking about //
##f$EarlyStage##
When NOT PreBubble Return false Force
When Not f$Stack_12P Return false FORCE
// Was 5 changed to 3 Trish compatibility for most casinos today even non turbo
	// StartingBigBlindSize excellent for SnG & MTTSnG, but people tweeking this for MTTs
	// should consider late reg, and re-entry game types
WHEN (BigBlindSize <= (3 * StartingBigBlindSize)) RETURN true FORCE

##f$LateStage##
When NOT PreBubble Return false Force
When f$EarlyStage Return false Force
When BigBlindSize >= 160 And (f$TableMzone < 12 OR f$Mzone < 10) Return true FORCE
// @Trish check this temporary inclusion
When BigBlindSize >= 100 And Not f$Stack_12P Return true FORCE
When f$EffectiveActiveStackInBigBlinds <= 10 Return true FORCE

##f$MiddleStage##
When NOT PreBubble Return false Force
WHEN f$EarlyStage RETURN false FORCE
WHEN f$LateStage RETURN false FORCE
WHEN Others RETURN true FORCE

##f$DeepStackHand##
// Check this, prep for MTTs
When f$EffectiveActiveStackInBigBlinds >= 25 Return true FORCE
When f$TableMzone > 20.7 And f$EffectiveActiveStackInBigBlinds > 20 Return true FORCE

##f$Termita_PreflopRaise##
// Needs work just basic to get running
When PreBubble And Raises = 0
	When StackSize < 12 Return 12 FORCE
	When f$DeepStackHand And (f$EarlyStage or f$MiddleStage) And Calls >= 1 Return (2 + Calls) FORCE
	When (f$EarlyStage or f$MiddleStage) And StackSize > 14 And f$TheBiggestActiveOpponentsStack >= 12 And Calls >= 1 Return (2 + Calls) FORCE
	When f$DeepStackHand And f$LateStage Return (1 + Calls) FORCE
	When f$LateStage Return 2 FORCE
When PreBubble 
	When Raises > 0 Return (AmountToCall*3) Force
	When Others Return 3 FORCE


##f$FirstAction##
WHEN BotsLastAction = None RETURN true FORCE 

// I think these should be relatively based on our equity at start of hand 
##f$InTheMoney_BigStack##
When InTheMoney
	When (balance+currentbet) < balance_rank0 Return false FORCE
	// If the difference is insignificant play middle for now, in the future we could
		// take the size of the smallest stack into account especially if very low 
		// 10% may not be best here
	When balance_rank1 <= ((balance+currentbet)*0.90) Return true FORCE

##f$InTheMoney_SmallStack##
When InTheMoney And Not f$InTheMoney_BigStack
	// If the difference is insignificant play Small 2nd place prize is usually not big enough
	// compared to 3rd place to be worth aiming for, take 1st or 3rd
	// 10% may not be best here
	//
	// FR SnG first
	When PaidPlaces = 3 And (balance+currentbet) = balance_rank2 Return true FORCE
	When PaidPlaces = 3 And (balance+currentbet) = balance_rank1  And balance_rank2 > ((balance+currentbet)*0.90) Return true FORCE
	// isdon and others
	When PaidPlaces >= 4 And OpponentsWithLowerStack = 0 Return true FORCE

##f$InTheMoney_MiddleStack##
When f$InTheMoney_BigStack Return false FORCE
When f$InTheMoney_SmallStack Return false FORCE
When InTheMoney Return true FORCE

///////////////////////////////////////////////////////////////////
// Provides a mild exponential increase as the stack diminishes  //
// Using log natural (e) 2.718281828459 but any base can be used //
///////////////////////////////////////////////////////////////////
##f$SS_Blind_HU_Start##
InSmallBlind ? 39 :
InBigBlind ? 33 :
33

##f$SS_Blind_HU_Exponent##
(ln (75 / f$SS_Blind_HU_Start) / 6)*(8-f$EffectiveActiveStackInBigBlinds)

##f$SS_Blind_HU_Log##
f$EffectiveActiveStackInBigBlinds > 8 ? 0 :
f$SS_Blind_HU_Start*(2.718281828459**(f$SS_Blind_HU_Exponent)) < f$SS_Blind_HU_Start ? (f$SS_Blind_HU_Start/100) :
f$SS_Blind_HU_Start*(2.718281828459**(f$SS_Blind_HU_Exponent)) > 75 ? (0.75) :
f$SS_Blind_HU_Start*(2.718281828459**(f$SS_Blind_HU_Exponent))/100
///////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////
//
// Handlists
//
//////////////////////////////////////////////////////////////////

##listCat1##
AA KK

##listCat2##
AA KK QQ JJ
AKs
AKo

##listCat3##
AA KK QQ JJ TT 99
AKs AQs 
AKo AQo

##listCat4##
AA KK QQ JJ TT 99 88 77
AKs AQs AJs
KQs
AKo AQo

##listCat5##
AA KK QQ JJ TT 99 88 77 66 55
AKs AQs AJs ATs
KQs KJs
AKo AQo AJo ATo 
KQo 

##listCat6##
AA KK QQ JJ TT 99 88 77 66 55 44 33 22 
AKs AQs AJs ATs A9s A8s A7s A6s A5s A4s A3s A2S
KQs KJs KTs
QJs QTs
JTs 
AKo AQo AJo ATo 
KQo KJo

##listCat7##
AA KK QQ JJ TT 99 88 77 66 55 44 33 22 
AKs AQs AJs ATs A9s A8s A7s A6s A5s A4s A3s A2S
KQs KJs KTs
QJs QTs
JTs T9s 98s 87s 76s 65s 54s
AKo AQo AJo ATo A9o A8o A7o A6o A5o A4o A3o A2o
KQo KJo KTo
QJo QTo 
JTo

##listCat8##
AA KK QQ JJ TT 99 88 77 66 55 44 33 22 
AKs AQs AJs ATs A9s A8s A7s A6s A5s A4s A3s A2S
KQs KJs KTs K9s K8s 
QJs QTs Q9s Q8s 
JTs J9s  
T9s T8s 
98s 97s 
87s 86s 
76s 75s
65s 54s
AKo AQo AJo ATo A9o A8o A7o A6o A5o A4o A3o A2o
KQo KJo KTo K9o K8o
QJo QTo 
JTo T9o 98o 87o 76o 

// Bubble Lists
##listBubbleCat1##
AA KK

##listBubbleCat2##
AA KK QQ JJ
AKs
AKo

##listBubbleCat3##
AA KK QQ JJ TT 99
AKs AQs 
AKo AQo

##listBubbleCat4##
AA KK QQ JJ TT 99 88 77
AKs AQs AJs
KQs
AKo AQo

##listBubbleCat5##
AA KK QQ JJ TT 99 88 77 66 55
AKs AQs AJs ATs
KQs KJs
AKo AQo AJo ATo 
KQo 

##listBubbleCat6##
AA KK QQ JJ TT 99 88 77 66 55 44 33 22 
AKs AQs AJs ATs A9s A8s A7s A6s A5s A4s A3s A2S
KQs KJs KTs
QJs QTs
JTs 
AKo AQo AJo ATo 
KQo KJo

##listBubbleCat7##
AA KK QQ JJ TT 99 88 77 66 55 44 33 22 
AKs AQs AJs ATs A9s A8s A7s A6s A5s A4s A3s A2S
KQs KJs KTs
QJs QTs
JTs T9s 98s 87s 76s 65s 54s
AKo AQo AJo ATo A9o A8o A7o A6o A5o A4o A3o A2o
KQo KJo KTo
QJo QTo 
JTo

##listBubbleCat8##
AA KK QQ JJ TT 99 88 77 66 55 44 33 22 
AKs AQs AJs ATs A9s A8s A7s A6s A5s A4s A3s A2S
KQs KJs KTs K9s K8s 
QJs QTs Q9s Q8s 
JTs J9s  
T9s T8s 
98s 97s 
87s 86s 
76s 75s
65s 54s
AKo AQo AJo ATo A9o A8o A7o A6o A5o A4o A3o A2o
KQo KJo KTo K9o K8o
QJo QTo 
JTo T9o 98o 87o 76o  

// ITM Lists
##listITMCat1##
AA KK

##listITMCat2##
AA KK QQ JJ
AKs
AKo

##listITMCat3##
AA KK QQ JJ TT 99
AKs AQs 
AKo AQo

##listITMCat4##
AA KK QQ JJ TT 99 88 77
AKs AQs AJs
KQs
AKo AQo

##listITMCat5##
AA KK QQ JJ TT 99 88 77 66 55
AKs AQs AJs ATs
KQs KJs
AKo AQo AJo ATo 
KQo 

##listITMCat6##
AA KK QQ JJ TT 99 88 77 66 55 44 33 22 
AKs AQs AJs ATs A9s A8s A7s A6s A5s A4s A3s A2S
KQs KJs KTs
QJs QTs
JTs 
AKo AQo AJo ATo 
KQo KJo

##listITMCat7##
AA KK QQ JJ TT 99 88 77 66 55 44 33 22 
AKs AQs AJs ATs A9s A8s A7s A6s A5s A4s A3s A2S
KQs KJs KTs
QJs QTs
JTs T9s 98s 87s 76s 65s 54s
AKo AQo AJo ATo A9o A8o A7o A6o A5o A4o A3o A2o
KQo KJo KTo
QJo QTo 
JTo

##listITMCat8##
AA KK QQ JJ TT 99 88 77 66 55 44 33 22 
AKs AQs AJs ATs A9s A8s A7s A6s A5s A4s A3s A2S
KQs KJs KTs K9s K8s 
QJs QTs Q9s Q8s 
JTs J9s  
T9s T8s 
98s 97s 
87s 86s 
76s 75s
65s 54s
AKo AQo AJo ATo A9o A8o A7o A6o A5o A4o A3o A2o
KQo KJo KTo K9o K8o
QJo QTo 
JTo T9o 98o 87o 76o  

// HU Lists
##listHUCat1##
AA KK

##listHUCat2##
AA KK QQ JJ
AKs
AKo

##listHUCat3##
AA KK QQ JJ TT 99
AKs AQs 
AKo AQo

##listHUCat4##
AA KK QQ JJ TT 99 88 77
AKs AQs AJs
KQs
AKo AQo

##listHUCat5##
AA KK QQ JJ TT 99 88 77 66 55
AKs AQs AJs ATs
KQs KJs
AKo AQo AJo ATo 
KQo 

##listHUCat6##
AA KK QQ JJ TT 99 88 77 66 55 44 33 22 
AKs AQs AJs ATs A9s A8s A7s A6s A5s A4s A3s A2S
KQs KJs KTs
QJs QTs
JTs 
AKo AQo AJo ATo 
KQo KJo

##listHUCat7##
AA KK QQ JJ TT 99 88 77 66 55 44 33 22 
AKs AQs AJs ATs A9s A8s A7s A6s A5s A4s A3s A2S
KQs KJs KTs
QJs QTs
JTs T9s 98s 87s 76s 65s 54s
AKo AQo AJo ATo A9o A8o A7o A6o A5o A4o A3o A2o
KQo KJo KTo
QJo QTo 
JTo

##listHUCat8##
AA KK QQ JJ TT 99 88 77 66 55 44 33 22 
AKs AQs AJs ATs A9s A8s A7s A6s A5s A4s A3s A2S
KQs KJs KTs K9s K8s 
QJs QTs Q9s Q8s 
JTs J9s  
T9s T8s 
98s 97s 
87s 86s 
76s 75s
65s 54s
AKo AQo AJo ATo A9o A8o A7o A6o A5o A4o A3o A2o
KQo KJo KTo K9o K8o
QJo QTo 
JTo T9o 98o 87o 76o 

##listGen2Way47pc##
AA KK QQ JJ TT 99 88 77 66 55 44 33
AKs AQs AJs ATs A9s A8s A7s A6s A5s A4s A3s A2s 
KQs KJs KTs K9s K8s K7s K6s K5s K4s K3s K2s
QJs QTs Q9s Q8s Q7s Q6s Q5s Q4s Q3s
JTs J9s J8s J7s J6s
T9s T8s T7s
98s
AKo AQo AJo ATo A9o A8o A7o A6o A5o A4o A3o A2o
KQo KJo KTo K9o K8o K7o K6o K5o K4o K3o
QJo QTo Q9o Q8o Q7o Q6o
JTo J9o J8o
T9o

##listGen2Way55pc##
AA KK QQ JJ TT 99 88 77 66 55 44 33 22
AKs AQs AJs ATs A9s A8s A7s A6s A5s A4s A3s A2s
KQs KJs KTs K9s K8s K7s K6s K5s K4s K3s K2s
QJs QTs QTs Q9s Q8s Q7s Q6s Q5s Q4s Q3s Q2s
JTs	J9s J8s J7s J6s J5s J4s J3s
T9s T8s T7s T6s
98s 97s
AKo AQo AJo ATo A9o A8o A7o A6o A5o A4o A3o A2o
KQo KJo KTo K9o K8o K7o K6o K5o K4o K3o K2o
QJo QTo Q9o Q8o Q7o Q6o Q5o Q4o Q3o
JTo J9o J8o J7o
T9o T8o
98o

##listGen2Way50pc##
AA KK QQ JJ TT 99 88 77 66 55 44 33 22
AKs AQs AJs ATs A9s A8s A7s A6s A5s A4s A3s A2s 
KQs KJs KTs K9s K8s K7s K6s K5s K4s K3s K2s
QJs QTs Q9s Q8s Q7s Q6s Q5s Q4s Q3s Q2s
JTs J9s J8s J7s J6s J5s
T9s T8s T7s
98s
AKo AQo AJo ATo A9o A8o A7o A6o A5o A4o A3o A2o
KQo KJo KTo K9o K8o K7o K6o K5o K4o K3o K2o
QJo QTo Q9o Q8o Q7o Q6o Q5o
JTo J9o J8o
T9o T8o

##listGen2Way62pc##
AA KK QQ JJ TT 99 88 77 66 55 44 33 22
AKs AQs AJs ATs A9s A8s A7s A6s A5s A4s A3s A2s
KQs KJs KTs K9s K8s K7s K6s K5s K4s K3s K2s
QJs QTs QTs Q9s Q8s Q7s Q6s Q5s Q4s Q3s Q2s
JTs	J9s J8s J7s J6s J5s J4s J3s J2s
T9s T8s T7s T6s T5s T4s
98s 97s 96s
87s 86s
AKo AQo AJo ATo A9o A8o A7o A6o A5o A4o A3o A2o
KQo KJo KTo K9o K8o K7o K6o K5o K4o K3o K2o
QJo QTo Q9o Q8o Q7o Q6o Q5o Q4o Q3o
JTo J9o J8o J7o J6o J5o
T9o T8o T7o
98o 97o

///////////////////// Lists Push
///// EP Push
##listep14bb##
AA KK QQ JJ TT 99 88 77
AKs AQs AJs ATs
KQs KJs KTs
QJs QTs
JTs
AKo AQo AJo

##listep12bb##
AA KK QQ JJ TT 99 88 77 66 55
AKs AQs AJs ATs A9s
KQs KJs KTs
QJs QTs
JTs
AKo AQo AJo

##listep10bb##
AA KK QQ JJ TT 99 88 77 66 55 44
AKs AQs AJs ATs A9s A8s
KQs KJs KTs
QJs QTs
JTs T9s
AKo AQo AJo ATo
KQo

##listep8bb##
AA KK QQ JJ TT 99 88 77 66 55 44 33
AKs AQs AJs ATs A9s A8s A7s
KQs KJs KTs K9s
QJs QTs Q9s
JTs T9s
AKo AQo AJo ATo
KQo KJo

##listep6bb##
AA KK QQ JJ TT 99 88 77 66 55 44 33 22
AKs AQs AJs ATs A9s A8s A7s A6s A5s A4s A3s A2s
KQs KJs KTs K9s K8s
QJs QTs Q9s
JTs T9s 98s
AKo AQo AJo ATo A9o A8o
KQo KJo KTo QJo

##listep5bb##
AA KK QQ JJ TT 99 88 77 66 55 44 33 22
AKs AQs AJs ATs A9s A8s A7s A6s A5s A4s A3s A2s
KQs KJs KTs K9s K8s K7s K6s K5s
QJs QTs Q9s Q8s
JTs J9s J8s T9s 98s 87s
AKo AQo AJo ATo A9o A8o A7o A6o A5o
KQo KJo KTo QJo QTo JTo

//////////////////////////////////////////// HJ Push
##listhj14bb##
AA KK QQ JJ TT 99 88 77 66 55
AKs AQs AJs ATs A9s
KQs KJs KTs
QJs QTs
JTs
AKo AQo AJo ATo
KQo

##listhj12bb##
AA KK QQ JJ TT 99 88 77 66 55 44
AKs AQs AJs ATs A9s A8s A7s
KQs KJs KTs K9s
QJs QTs
JTs
T9s
AKo AQo AJo ATo
KQo

##listhj10bb##
AA KK QQ JJ TT 99 88 77 66 55 44 33 22
AKs AQs AJs ATs A9s A8s A7s A6s A5s A4s A3s A2s
KQs KJs KTs K9s
QJs QTs Q9s
JTs J9s
T9s T8s 98s
AKo AQo AJo ATo A9o A8o
KQo KJo QJo

##listhj8bb##
AA KK QQ JJ TT 99 88 77 66 55 44 33 22
AKs AQs AJs ATs A9s A8s A7s A6s A5s A4s A3s A2s
KQs KJs KTs K9s K8s
QJs QTs Q9s
JTs J9s
T9s T8s 98s 87s
AKo AQo AJo ATo A9o A8o A7o
KQo KJo KTo QJo

##listhj6bb##
AA KK QQ JJ TT 99 88 77 66 55 44 33 22
AKs AQs AJs ATs A9s A8s A7s A6s A5s A4s A3s A2s
KQs KJs KTs K9s K8s K7s
QJs QTs Q9s
JTs J9s J8s
T9s T8s 98s 87s
AKo AQo AJo ATo A9o A8o A7o A6o A5o A4o
KQo KJo KTo QJo QTo JTo

##listhj5bb##
AA KK QQ JJ TT 99 88 77 66 55 44 33 22
AKs AQs AJs ATs A9s A8s A7s A6s A5s A4s A3s A2s
KQs KJs KTs K9s K8s K7s K6s K5s K4s K3s K2s
QJs QTs Q9s Q8s Q7s Q6s Q5s
JTs J9s J8s J7s
T9s T8s T7s 98s 97s 87s 76s
AKo AQo AJo ATo A9o A8o A7o A6o A5o A4o A3o A2o
KQo KJo KTo K9o K8o K7o QJo QTo Q9o JTo J9o T9o

////////////////////////////////////////////////////// CO Push
##listco14bb##
AA KK QQ JJ TT 99 88 77 66 55 44 33 22
AKs AQs AJs ATs A9s A8s A7s A6s A5s A4s A3s A2s
KQs KJs KTs K9s
QJs QTs Q9s
JTs J9s
T9s 98s
AKo AQo AJo ATo A9o A8o A7o
KQo KJo KTo

##listco12bb##
AA KK QQ JJ TT 99 88 77 66 55 44 33 22
AKs AQs AJs ATs A9s A8s A7s A6s A5s A4s A3s A2s
KQs KJs KTs K9s
QJs QTs Q9s
JTs J9s
T9s T8s
98s
AKo AQo AJo ATo A9o A8o A7o A6o A5o
KQo KJo KTo
QJo

##listco10bb##
AA KK QQ JJ TT 99 88 77 66 55 44 33 22
AKs AQs AJs ATs A9s A8s A7s A6s A5s A4s A3s A2s
KQs KJs KTs K9s K8s K7s K6s
QJs QTs Q9s Q8s
JTs J9s J8s
T9s T8s
98s 97s 87s 76s
AKo AQo AJo ATo A9o A8o A7o A6o A5o A4o A3o A2o
KQo KJo KTo
QJo QTo JTo

##listco8bb##
AA KK QQ JJ TT 99 88 77 66 55 44 33 22
AKs AQs AJs ATs A9s A8s A7s A6s A5s A4s A3s A2s
KQs KJs KTs K9s K8s K7s K6s K5s K4s
QJs QTs Q9s Q8s
JTs J9s J8s
T9s T8s
98s 97s 87s 76s 65s
AKo AQo AJo ATo A9o A8o A7o A6o A5o A4o A3o A2o
KQo KJo KTo K9o
QJo QTo JTo

##listco6bb##
AA KK QQ JJ TT 99 88 77 66 55 44 33 22
AKs AQs AJs ATs A9s A8s A7s A6s A5s A4s A3s A2s
KQs KJs KTs K9s K8s K7s K6s K5s K4s K3s K2s
QJs QTs Q9s Q8s Q7s Q6s Q5s
JTs J9s J8s J7s
T9s T8s T7s
98s 97s 87s 76s 65s
AKo AQo AJo ATo A9o A8o A7o A6o A5o A4o A3o A2o
KQo KJo KTo K9o K8o K7o K6o
QJo QTo Q9o JTo J9o T9o

##listco5bb##
AA KK QQ JJ TT 99 88 77 66 55 44 33 22
AKs AQs AJs ATs A9s A8s A7s A6s A5s A4s A3s A2s
KQs KJs KTs K9s K8s K7s K6s K5s K4s K3s K2s
QJs QTs Q9s Q8s Q7s Q6s Q5s Q4s Q3s Q2s
JTs J9s J8s J7s J6s
T9s T8s T7s T6s
98s 97s 96s 87s 86s 76s 65s
AKo AQo AJo ATo A9o A8o A7o A6o A5o A4o A3o A2o
KQo KJo KTo K9o K8o K7o K6o K5o K4o
QJo QTo Q9o Q8o Q7o JTo J9o J8o T9o T8o 98o

////////////////////////////////////////////////////////// BU Push
##listbu14bb##
AA KK QQ JJ TT 99 88 77 66 55 44 33 22
AKs AQs AJs ATs A9s A8s A7s A6s A5s A4s A3s A2s
KQs KJs KTs K9s K8s K7s K6s
QJs QTs Q9s Q8s
JTs J9s J8s
T9s T8s
98s 97s 87s 76s
AKo AQo AJo ATo A9o A8o A7o A6o A5o A4o A3o A2o
KQo KJo KTo
QJo QTo
JTo

##listbu12bb##
AA KK QQ JJ TT 99 88 77 66 55 44 33 22
AKs AQs AJs ATs A9s A8s A7s A6s A5s A4s A3s A2s
KQs KJs KTs K9s K8s K7s K6s K5s K4s
QJs QTs Q9s Q8s
JTs J9s J8s
T9s T8s T7s
98s 97s 87s 76s
AKo AQo AJo ATo A9o A8o A7o A6o A5o A4o A3o A2o
KQo KJo KTo K9o K9o
QJo QTo
JTo

##listbu10bb##
AA KK QQ JJ TT 99 88 77 66 55 44 33 22
AKs AQs AJs ATs A9s A8s A7s A6s A5s A4s A3s A2s
KQs KJs KTs K9s K8s K7s K6s K5s K4s K3s K2s
QJs QTs Q9s Q8s Q7s Q6s
JTs J9s J8s
T9s T8s T7s
98s 97s 87s 86s 76s 65s
AKo AQo AJo ATo A9o A8o A7o A6o A5o A4o A3o A2o
KQo KJo KTo K9o K9o K8o K7o
QJo QTo Q9o
JTo J9o T9o

##listbu8bb##
AA KK QQ JJ TT 99 88 77 66 55 44 33 22
AKs AQs AJs ATs A9s A8s A7s A6s A5s A4s A3s A2s
KQs KJs KTs K9s K8s K7s K6s K5s K4s K3s K2s
QJs QTs Q9s Q8s Q7s Q6s Q5s
JTs J9s J8s J7s
T9s T8s T7s
98s 97s 87s 86s 76s 65s
AKo AQo AJo ATo A9o A8o A7o A6o A5o A4o A3o A2o
KQo KJo KTo K9o K9o K8o K7o K6o K5o
QJo QTo Q9o
JTo J9o T9o

##listbu6bb##
AA KK QQ JJ TT 99 88 77 66 55 44 33 22
AKs AQs AJs ATs A9s A8s A7s A6s A5s A4s A3s A2s
KQs KJs KTs K9s K8s K7s K6s K5s K4s K3s K2s
QJs QTs Q9s Q8s Q7s Q6s Q5s Q4s Q3s Q2s
JTs J9s J8s J7s J6s j5s
T9s T8s T7s T6s
98s 97s 96s 87s 86s 76s 75s 65s
AKo AQo AJo ATo A9o A8o A7o A6o A5o A4o A3o A2o
KQo KJo KTo K9o K9o K8o K7o K6o K5o K4o K3o K2o
QJo QTo Q9o Q8o Q7o
JTo J9o J8o T9o

##listbu5bb##
AA KK QQ JJ TT 99 88 77 66 55 44 33 22
AKs AQs AJs ATs A9s A8s A7s A6s A5s A4s A3s A2s
KQs KJs KTs K9s K8s K7s K6s K5s K4s K3s K2s
QJs QTs Q9s Q8s Q7s Q6s Q5s Q4s Q3s Q2s
JTs J9s J8s J7s J6s J5s J4s J3s
T9s T8s T7s T6s
98s 97s 96s 87s 86s 76s 75s 65s
AKo AQo AJo ATo A9o A8o A7o A6o A5o A4o A3o A2o
KQo KJo KTo K9o K9o K8o K7o K6o K5o K4o K3o K2o
QJo QTo Q9o Q8o Q7o Q6o Q5o
JTo J9o J8o J7o T9o T8o 98o

/////////////////////////////////////////////// SB Push
##listsb14bb##
AA KK QQ JJ TT 99 88 77 66 55 44 33
AKs AQs AJs ATs A9s A8s A7s A6s A5s A4s A3s A2s
KQs KJs KTs K9s K8s K7s K6s K5s K4s K3s K2s
QJs QTs Q9s Q8s Q7s Q6s Q5s Q4s
JTs J9s J8s J7s
T9s T8s
AKo AQo AJo ATo A9o A8o A7o A6o A5o A4o A3o A2o
KQo KJo KTo K9o K9o K8o K7o K6o K5o K4o
QJo QTo Q9o Q8o Q7o
JTo J9o

##listsb12bb##
AA KK QQ JJ TT 99 88 77 66 55 44 33
AKs AQs AJs ATs A9s A8s A7s A6s A5s A4s A3s A2s
KQs KJs KTs K9s K8s K7s K6s K5s K4s K3s K2s
QJs QTs Q9s Q8s Q7s Q6s Q5s Q4s Q3s
JTs J9s J8s J7s
T9s T8s 98s
AKo AQo AJo ATo A9o A8o A7o A6o A5o A4o A3o A2o
KQo KJo KTo K9o K9o K8o K7o K6o K5o K4o K3o
QJo QTo Q9o Q8o Q7o Q6o
JTo J9o J8o

##listsb10bb##
AA KK QQ JJ TT 99 88 77 66 55 44 33 22
AKs AQs AJs ATs A9s A8s A7s A6s A5s A4s A3s A2s
KQs KJs KTs K9s K8s K7s K6s K5s K4s K3s K2s
QJs QTs Q9s Q8s Q7s Q6s Q5s Q4s Q3s Q2s
JTs J9s J8s J7s J6s J5s
T9s T8s 98s
AKo AQo AJo ATo A9o A8o A7o A6o A5o A4o A3o A2o
KQo KJo KTo K9o K9o K8o K7o K6o K5o K4o K3o K2o
QJo QTo Q9o Q8o Q7o Q6o Q5o
JTo J9o J8o
T9o T8o

##listsb8bb##
AA KK QQ JJ TT 99 88 77 66 55 44 33 22
AKs AQs AJs ATs A9s A8s A7s A6s A5s A4s A3s A2s
KQs KJs KTs K9s K8s K7s K6s K5s K4s K3s K2s
QJs QTs Q9s Q8s Q7s Q6s Q5s Q4s Q3s Q2s
JTs J9s J8s J7s J6s J5s J4s
T9s T8s T7s 
98s 97s
AKo AQo AJo ATo A9o A8o A7o A6o A5o A4o A3o A2o
KQo KJo KTo K9o K9o K8o K7o K6o K5o K4o K3o K2o
QJo QTo Q9o Q8o Q7o Q6o Q5o Q4o
JTo J9o J8o J7o
T9o T8o

##listsb6bb##
AA KK QQ JJ TT 99 88 77 66 55 44 33 22
AKs AQs AJs ATs A9s A8s A7s A6s A5s A4s A3s A2s
KQs KJs KTs K9s K8s K7s K6s K5s K4s K3s K2s
QJs QTs Q9s Q8s Q7s Q6s Q5s Q4s Q3s Q2s
JTs J9s J8s J7s J6s J5s J4s J3s J2s
T9s T8s T7s T6s
98s 97s 96s 87s
AKo AQo AJo ATo A9o A8o A7o A6o A5o A4o A3o A2o
KQo KJo KTo K9o K9o K8o K7o K6o K5o K4o K3o K2o
QJo QTo Q9o Q8o Q7o Q6o Q5o Q4o Q3o Q2o
JTo J9o J8o J7o J6o 
T9o T8o T7o
98o

##listsb5bb##
AA KK QQ JJ TT 99 88 77 66 55 44 33 22
AKs AQs AJs ATs A9s A8s A7s A6s A5s A4s A3s A2s
KQs KJs KTs K9s K8s K7s K6s K5s K4s K3s K2s
QJs QTs Q9s Q8s Q7s Q6s Q5s Q4s Q3s Q2s
JTs J9s J8s J7s J6s J5s J4s J3s J2s
T9s T8s T7s T6s T5s T4s T3s
98s 97s 96s 95s
87s 86s 76s
AKo AQo AJo ATo A9o A8o A7o A6o A5o A4o A3o A2o
KQo KJo KTo K9o K9o K8o K7o K6o K5o K4o K3o K2o
QJo QTo Q9o Q8o Q7o Q6o Q5o Q4o Q3o Q2o
JTo J9o J8o J7o J6o J5o J4o J3o
T9o T8o T7o T6o
98o 97o

//////////////////////////////////////////////////////////// Re Push // Squeeze Lists

// Not in a blind
##listRPnotblindEP13##
AA KK QQ JJ
AKs
AKo

##listRPnotblindEP8##
AA KK QQ JJ TT 99
AKs AQs
AKo AQo

##listRPnotblindMP13##
AA KK QQ JJ
AKs
AKo

##listRPnotblindMP9##
AA KK QQ JJ TT 99
AKs AQs
AKo AQo

##listRPnotblindMP6##
AA KK QQ JJ TT 99
AKs AQs Ajs ATs
AKo AQo

##listRPnotblindMP5##
AA KK QQ JJ TT 99 88 77
AKs AQs Ajs ATs
AKo AQo AJo

##listRPnotblindCO13##
AA KK QQ JJ
AKs
AKo

##listRPnotblindCO11##
AA KK QQ JJ TT 99
AKs AQs
AKo AQo

##listRPnotblindCO9##
AA KK QQ JJ TT 99
AKs AQs AJs ATs
AKo AQo

##listRPnotblindCO7##
AA KK QQ JJ TT 99 88 77
AKs AQs AJs ATs
AKo AQo AJo

##listRPnotblindCO6##
AA KK QQ JJ TT 99 88 77
AKs AQs AJs ATs A9s
AKo AQo AJo ATo

// In the  SB
##listRPsbEP13##
AA KK QQ JJ
AKs
AKo

##listRPsbEP9##
AA KK QQ JJ TT 99
AKs AQs
AKo AQo

##listRPsbMP13##
AA KK QQ JJ TT 99
AKs AQs
AKo AQo

##listRPsbMP7##
AA KK QQ JJ TT 99 88 77 
AKs AQs AJs ATs
AKo AQo

##listRPsbMP6##
AA KK QQ JJ TT 99 88 77 
AKs AQs AJs ATs
AKo AQo AJo

##listRPsbMP4##
AA KK QQ JJ TT 99 88 77 
AKs AQs AJs ATs A9s
AKo AQo AJo ATo

##listRPsbCO13##
AA KK QQ JJ TT 99
AKs AQs AJs ATs
AKo AQo

##listRPsbCO11##
AA KK QQ JJ TT 99 88 77
AKs AQs AJs ATs
AKo AQo AJo

##listRPsbCO8##
AA KK QQ JJ TT 99 88 77
AKs AQs AJs ATs A9s
AKo AQo AJo ATo

##listRPsbCO5##
AA KK QQ JJ TT 99 88 77 66 55
AKs AQs AJs ATs A9s
AKo AQo AJo ATo

##listRPsbCO4##
AA KK QQ JJ TT 99 88 77 66 55
AKs AQs AJs ATs A9s A8s A7s A6s A5s A4s
AKo AQo AJo ATo A9o A8o A7o
KQs KJs
KQo

##listRPsbBU13##
AA KK QQ JJ TT 99 88 77
AKs AQs AJs ATs
AKo AQo AJo

##listRPsbBU10##
AA KK QQ JJ TT 99 88 77
AKs AQs AJs ATs A9s
AKo AQo AJo ATo

##listRPsbBU8##
AA KK QQ JJ TT 99 88 77 66 55
AKs AQs AJs ATs A9s
AKo AQo AJo ATo

##listRPsbBU6##
AA KK QQ JJ TT 99 88 77 66 55
AKs AQs AJs ATs A9s A8s A7s A6s A5s A4s
AKo AQo AJo ATo A9o A8o A7o
KQs KJs
KQo

// In the  BB
##listRPbbEP13##
AA KK QQ JJ
AKs
AKo

##listRPbbEP10##
AA KK QQ JJ TT 99
AKs AQs
AKo AQo

##listRPbbMP13##
AA KK QQ JJ TT 99
AKs AQs
AKo AQo

##listRPbbMP8##
AA KK QQ JJ TT 99 88 77
AKs AQs AJs ATs
AKo AQo

##listRPbbMP7##
AA KK QQ JJ TT 99 88 77
AKs AQs AJs ATs
AKo AQo AJo

##listRPbbMP6##
AA KK QQ JJ TT 99 88 77
AKs AQs AJs ATs A9s
AKo AQo AJo ATo

##listRPbbMP5##
AA KK QQ JJ TT 99 88 77 66 55
AKs AQs AJs ATs A9s
AKo AQo AJo ATo

##listRPbbMP4##
AA KK QQ JJ TT 99 88 77 66 55 44 33
AKs AQs AJs ATs A9s
KQs KJs
AKo AQo AJo ATo
KQo

##listRPbbMP3##
AA KK QQ JJ TT 99 88 77 66 55 44 33
AKs AQs AJs ATs A9s A8s A7s A6s A5s A4s
KQs KJs KTs K9s
QJs
AKo AQo AJo ATo A9o A8o A7o
KQo KJo KTo

##listRPbbMP2##
AA KK QQ JJ TT 99 88 77 66 55 44 33
AKs AQs AJs ATs A9s A8s A7s A6s A5s A4s A3s A2s
KQs KJs KTs K9s
QJs
AKo AQo AJo ATo A9o A8o A7o A6o A5o A4o A3o A2o
KQo KJo KTo

##listRPbbCO13##
AA KK QQ JJ TT 99 88 77
AKs AQs AJs ATs
AKo AQo AJo

##listRPbbCO10##
AA KK QQ JJ TT 99 88 77
AKs AQs AJs ATs A9s
AKo AQo AJo ATo

##listRPbbCO8##
AA KK QQ JJ TT 99 88 77 66 55
AKs AQs AJs ATs A9s
AKo AQo AJo ATo

##listRPbbCO6##
AA KK QQ JJ TT 99 88 77 66 55
AKs AQs AJs ATs A9s A8s A7s A6s A5s A4s
AKo AQo AJo ATo A9o A8o A7o

##listRPbbCO5##
AA KK QQ JJ TT 99 88 77 66 55 44 33
AKs AQs AJs ATs A9s A8s A7s A6s A5s A4s A3s A2s
KQs KJs
AKo AQo AJo ATo A9o A8o A7o A6o A5o A4o A3o A2o
KQo

##listRPbbCO4##
AA KK QQ JJ TT 99 88 77 66 55 44 33
AKs AQs AJs ATs A9s A8s A7s A6s A5s A4s A3s A2s
KQs KJs KTs K9s
QJs
AKo AQo AJo ATo A9o A8o A7o A6o A5o A4o A3o A2o
KQo KJo KTo

##listRPbbBU13##
AA KK QQ JJ TT 99 88 77
AKs AQs AJs ATs A9s
AKo AQo AJo ATo

##listRPbbBU10##
AA KK QQ JJ TT 99 88 77 66 55
AKs AQs AJs ATs A9s
AKo AQo AJo ATo

##listRPbbBU8##
AA KK QQ JJ TT 99 88 77 66 55
AKs AQs AJs ATs A9s A8s A7s A6s A5s A4s
KQs KJs
AKo AQo AJo ATo A9o A8o A7o
KQo 

##listRPbbBU6##
AA KK QQ JJ TT 99 88 77 66 55 44 33
AKs AQs AJs ATs A9s A8s A7s A6s A5s A4s A3s A2s
KQs KJs KTs K9s
QJs
AKo AQo AJo ATo A9o A8o A7o A6o A5o A4o A3o A2o
KQo KJo KTo

##listRPbbSB13##
AA KK QQ JJ TT 99 88 77 66 55
AKs AQs AJs ATs A9s A8s A7s A6s A5s A4s
KQs KJs
AKo AQo AJo ATo A9o A8o A7o
KQo 

##listRPbbSB10##
AA KK QQ JJ TT 99 88 77 66 55
AKs AQs AJs ATs A9s A8s A7s A6s A5s A4s
KQs KJs KTs K9s
AKo AQo AJo ATo A9o A8o A7o
KQo KJo KTo

##listRPbbSB8##
AA KK QQ JJ TT 99 88 77 66 55
AKs AQs AJs ATs A9s A8s A7s A6s A5s A4s A3s A2s
KQs KJs KTs K9s
QJs
AKo AQo AJo ATo A9o A8o A7o A6o A5o A4o A3o A2o
KQo KJo KTo

##listRPbbSB7##
AA KK QQ JJ TT 99 88 77 66 55 44 33
AKs AQs AJs ATs A9s A8s A7s A6s A5s A4s A3s A2s
KQs KJs KTs K9s
QJs
AKo AQo AJo ATo A9o A8o A7o A6o A5o A4o A3o A2o
KQo KJo KTo

##listvsMinRaiseEarlyBB##
AA KK QQ JJ TT 99 88 77 66 55
AKs AQs AJs ATs A9s A8s A7s
KQs KJs KTs
QJs QTs
JTs
T9s
98s
AKo AQo

##listvsMinRaiseEarlyBBPlus##
AA KK QQ JJ TT 99 88 77 66 55 44
AKs AQs AJs ATs A9s A8s A7s A6s A5s A4s A3s A2s
KQs KJs KTs K9s
QJs QTs Q9s
JTs J9s
T9s T8s
98s 87s
AKo AQo AJo

##listvsMinRaiseBB##
AA KK QQ JJ TT 99 88 77 66 55
AKs AQs AJs ATs A9s A8s A7s
KQs KJs KTs
QJs QTs
JTs
T9s
98s
AKo AQo

##listvsMinRaiseBBPlus##
AA KK QQ JJ TT 99 88 77 66 55 44
AKs AQs AJs ATs A9s A8s A7s A6s A5s A4s A3s A2s
KQs KJs KTs K9s
QJs QTs Q9s
JTs J9s
T9s T8s
98s 87s
AKo AQo AJo

##listSBcomp##
AA KK QQ JJ TT 99 88 77 66 55 44 33 22 
AKs AQs AJs ATs A9s A8s A7s A6s A5s A4s A3s A2s 
KQs KJs KTs K9s
QJs QTs Q9s
JTs J9s
T9s
98s 87s 76s 
AKo AQo AJo ATo
KQo KJo KTo
QJo JTo

##listSBcompA##
AA KK QQ JJ TT 99 88 77 66 55 44 33 22 
AKs AQs AJs ATs
KQs KJs KTs
QJs QTs
JTs
T9s
98s 87s 76s 
AKo AQo AJo ATo
KQo
QJo JTo

##listSBComp##
AA KK QQ JJ TT 99 88 77 66 55 44 33 22 
AKs AQs AJs ATs A9s A8s A7s A6s A5s A4s A3s A2s 
KQs KJs KTs K9s
QJs QTs Q9s
JTs J9s
T9s
98s 87s 76s 
AKo AQo AJo ATo
KQo KJo KTo
QJo JTo

##listSBcompMulti##
66 55 44 33 22 
A6s A5s A4s A3s A2s 
K9s 
QTs Q9s 
JTs J9s 
T9s T8s 
98s 97s
87s 86s 
76s 65s 54s 
QJo JTo

##listbad##
J2s T5s T4s T3s T2s 95s 94s 93s 92s 85s 84s 83s 82s 74s 73s 72s 64s 63s 62s 54s 53s 52s 43s 42s 32s 
Q4o Q3o Q2o J6o J5o J4o J3o J2o T7o T6o T5o T4o T3o T2o 97o 96o 95o 94o 93o 92o 87o 86o 85o 84o 83o 82o 76o 75o 74o 73o 72o 65o 64o 63o 62o 54o 53o 52o 43o 42o 32o 

// TO DO
//handle HeadsUp before ITM
//handle late before early, in case tournament stage is both


//document:
//InTheMoney
//IsBubble
//new tournament symbols
//StartingBigBlindSize
//AverageStackSize

//load tournament symbols
